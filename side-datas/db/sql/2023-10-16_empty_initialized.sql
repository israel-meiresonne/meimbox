-- Adminer 4.8.1 MySQL 8.0.34 dump

SET NAMES utf8;
SET time_zone = '+00:00';
SET foreign_key_checks = 0;
SET sql_mode = 'NO_AUTO_VALUE_ON_ZERO';

CREATE DATABASE `meimbox.dev` /*!40100 DEFAULT CHARACTER SET utf8mb3 */ /*!80016 DEFAULT ENCRYPTION='N' */;
USE `meimbox.dev`;

CREATE TABLE `Addresses` (
  `userId` varchar(50) NOT NULL,
  `address` varchar(100) NOT NULL,
  `zipcode` varchar(50) NOT NULL,
  `country_` varchar(100) NOT NULL,
  `appartement` varchar(100) DEFAULT NULL,
  `province` varchar(100) NOT NULL,
  `city` varchar(100) NOT NULL,
  `phoneNumber` varchar(50) DEFAULT NULL,
  `setDate` datetime NOT NULL,
  PRIMARY KEY (`userId`,`address`,`zipcode`,`country_`) USING BTREE,
  KEY `fk_country_.Addresses-FROM-Countries` (`country_`),
  CONSTRAINT `fk_country_.Addresses-FROM-Countries` FOREIGN KEY (`country_`) REFERENCES `Countries` (`country`) ON UPDATE CASCADE,
  CONSTRAINT `fk_userId.Addresses-FROM-Users` FOREIGN KEY (`userId`) REFERENCES `Users` (`userID`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Basket-DiscountCodes` (
  `userId` varchar(50) NOT NULL,
  `discount_code` varchar(50) NOT NULL,
  `setDate` datetime NOT NULL,
  PRIMARY KEY (`userId`,`discount_code`),
  KEY `fk_discount_code.Basket-DiscountCodes-FROM-DiscountCodes` (`discount_code`),
  CONSTRAINT `fk_discount_code.Basket-DiscountCodes-FROM-DiscountCodes` FOREIGN KEY (`discount_code`) REFERENCES `DiscountCodes` (`discountCode`) ON UPDATE CASCADE,
  CONSTRAINT `fk_userId.Basket-DiscountCodes-FROM-Users` FOREIGN KEY (`userId`) REFERENCES `Users` (`userID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Baskets-Box` (
  `boxId` varchar(100) NOT NULL,
  `userId` varchar(50) NOT NULL,
  PRIMARY KEY (`boxId`) USING BTREE,
  KEY `userId` (`userId`),
  CONSTRAINT `fk_boxId.Baskets-Box-FROM-Box` FOREIGN KEY (`boxId`) REFERENCES `Boxes` (`boxID`) ON UPDATE CASCADE,
  CONSTRAINT `fk_userId.Baskets-Box-FROM-Users` FOREIGN KEY (`userId`) REFERENCES `Users` (`userID`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Baskets-Products` (
  `userId` varchar(50) NOT NULL,
  `prodId` varchar(100) NOT NULL,
  `size_name` varchar(100) NOT NULL,
  `quantity` int NOT NULL,
  `setDate` datetime NOT NULL,
  PRIMARY KEY (`userId`,`prodId`,`size_name`) USING BTREE,
  KEY `fk_basketProdId.Baskets-Products-FROM-Products` (`prodId`),
  KEY `fk_size_name.Baskets-Products-FROM-Sizes` (`size_name`),
  CONSTRAINT `fk_basketProdId.Baskets-Products-FROM-Products` FOREIGN KEY (`prodId`) REFERENCES `Products` (`prodID`) ON UPDATE CASCADE,
  CONSTRAINT `fk_size_name.Baskets-Products-FROM-Sizes` FOREIGN KEY (`size_name`) REFERENCES `Sizes` (`sizeName`) ON UPDATE CASCADE,
  CONSTRAINT `fk_userId.Baskets-Products-FROM-Users` FOREIGN KEY (`userId`) REFERENCES `Users` (`userID`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `BodyParts` (
  `bodyPart` varchar(30) NOT NULL,
  PRIMARY KEY (`bodyPart`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `BodyParts` (`bodyPart`) VALUES
('arm'),
('bust'),
('hip'),
('inseam'),
('waist');

CREATE TABLE `Box-Products` (
  `boxId` varchar(100) NOT NULL,
  `prodId` varchar(100) NOT NULL,
  `sequenceID` varchar(100) NOT NULL,
  `size_name` varchar(100) DEFAULT NULL,
  `brand_name` varchar(100) DEFAULT NULL,
  `measureId` varchar(100) DEFAULT NULL,
  `cut_name` varchar(30) DEFAULT NULL,
  `quantity` int NOT NULL,
  `setDate` datetime NOT NULL,
  PRIMARY KEY (`boxId`,`prodId`,`sequenceID`) USING BTREE,
  KEY `fk_boxProdId.Box-Products-FROM-Products` (`prodId`),
  KEY `fk_size_name.Box-Products-FROM-Sizes` (`size_name`),
  KEY `fk_brand_name.Box-Products-FROM-BrandsMeasure` (`brand_name`),
  KEY `fk_measureId.Box-Products-FROM-UsersMeasures` (`measureId`),
  KEY `fk_cut_name.Box-Products-FROM-Cuts` (`cut_name`),
  CONSTRAINT `fk_boxId.Box-Products-FROM-Baskets-Box` FOREIGN KEY (`boxId`) REFERENCES `Baskets-Box` (`boxId`) ON UPDATE CASCADE,
  CONSTRAINT `fk_boxProdId.Box-Products-FROM-Products` FOREIGN KEY (`prodId`) REFERENCES `Products` (`prodID`) ON UPDATE CASCADE,
  CONSTRAINT `fk_brand_name.Box-Products-FROM-BrandsMeasure` FOREIGN KEY (`brand_name`) REFERENCES `BrandsMeasures` (`brandName`) ON UPDATE CASCADE,
  CONSTRAINT `fk_cut_name.Box-Products-FROM-Cuts` FOREIGN KEY (`cut_name`) REFERENCES `Cuts` (`cutName`) ON UPDATE CASCADE,
  CONSTRAINT `fk_measureId.Box-Products-FROM-UsersMeasures` FOREIGN KEY (`measureId`) REFERENCES `UsersMeasures` (`measureID`) ON UPDATE CASCADE,
  CONSTRAINT `fk_size_name.Box-Products-FROM-Sizes` FOREIGN KEY (`size_name`) REFERENCES `Sizes` (`sizeName`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `BoxArguments` (
  `box_color` varchar(10) NOT NULL,
  `argID` int NOT NULL,
  `argType` enum('advantage','drawback') NOT NULL,
  `argValue` text NOT NULL,
  PRIMARY KEY (`box_color`,`argID`),
  CONSTRAINT `fk_box_color.BoxArguments-FROM-BoxColors` FOREIGN KEY (`box_color`) REFERENCES `BoxColors` (`boxColor`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `BoxArguments` (`box_color`, `argID`, `argType`, `argValue`) VALUES
('gold',	1,	'advantage',	'US143'),
('gold',	2,	'advantage',	'US144'),
('gold',	3,	'advantage',	'US145'),
('gold',	4,	'advantage',	'US146'),
('regular',	1,	'advantage',	'US143'),
('regular',	2,	'advantage',	'US144'),
('regular',	3,	'advantage',	'US145'),
('regular',	4,	'advantage',	'US146'),
('silver',	1,	'advantage',	'US143'),
('silver',	2,	'advantage',	'US144'),
('silver',	3,	'advantage',	'US145'),
('silver',	4,	'advantage',	'US146');

CREATE TABLE `BoxColors` (
  `boxColor` varchar(10) NOT NULL,
  `sizeMax` int NOT NULL,
  `weight` double NOT NULL,
  `boxColorRGB` varchar(50) NOT NULL,
  `priceRGB` varchar(50) NOT NULL,
  `textualRGB` varchar(50) NOT NULL,
  `boxPicture` varchar(100) NOT NULL,
  `stock` int NOT NULL,
  PRIMARY KEY (`boxColor`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `BoxColors` (`boxColor`, `sizeMax`, `weight`, `boxColorRGB`, `priceRGB`, `textualRGB`, `boxPicture`, `stock`) VALUES
('gold',	7,	0.44,	'rgba(255, 211, 0, 0.7)',	'rgba(255, 211, 0)',	'#ffffff',	'box-gold-128.png',	100),
('regular',	3,	0.44,	'#ffffff',	'rgba(14, 36, 57, 0.8)',	'rgba(14, 36, 57, 0.5)',	'box-regular-128.png',	100),
('silver',	5,	0.44,	'rgba(229, 229, 231, 0.5)',	'#C6C6C7',	'rgba(14, 36, 57, 0.5)',	'box-silver-128.png',	100);

CREATE TABLE `BoxDiscounts` (
  `box_color` varchar(10) NOT NULL,
  `country_` varchar(100) NOT NULL,
  `discount_value` double NOT NULL,
  `beginDate` datetime DEFAULT NULL,
  `endDate` datetime DEFAULT NULL,
  PRIMARY KEY (`box_color`,`country_`),
  KEY `fk_country_.BoxDiscounts-FROM-Countries` (`country_`),
  KEY `discount_value` (`discount_value`),
  CONSTRAINT `fk_box_color.BoxDiscounts-FROM-BoxColors` FOREIGN KEY (`box_color`) REFERENCES `BoxColors` (`boxColor`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_country_.BoxDiscounts-FROM-Countries` FOREIGN KEY (`country_`) REFERENCES `Countries` (`country`) ON UPDATE CASCADE,
  CONSTRAINT `fk_discount_value.BoxDiscounts-FROM-DiscountValues` FOREIGN KEY (`discount_value`) REFERENCES `DiscountValues` (`discountValue`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Boxes` (
  `boxID` varchar(100) NOT NULL,
  `box_color` varchar(10) NOT NULL,
  `setDate` datetime NOT NULL,
  PRIMARY KEY (`boxID`),
  KEY `fk_box_color.Box-FROM-BoxColors` (`box_color`),
  CONSTRAINT `fk_box_color.Box-FROM-BoxColors` FOREIGN KEY (`box_color`) REFERENCES `BoxColors` (`boxColor`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Boxes` (`boxID`, `box_color`, `setDate`) VALUES
('box_2390o4500058wyl18627k16m4',	'regular',	'2023-10-16 05:58:06');

CREATE TABLE `BoxPrices` (
  `box_color` varchar(10) NOT NULL,
  `country_` varchar(100) NOT NULL,
  `iso_currency` varchar(10) NOT NULL,
  `price` double NOT NULL,
  PRIMARY KEY (`box_color`,`country_`,`iso_currency`),
  KEY `fk_country_.BoxPrices-FROM-Countries` (`country_`),
  KEY `fk_iso_currency.BoxPrices-FROM-CurrenciesIsoCodes` (`iso_currency`),
  CONSTRAINT `fk_box_color.BoxPrices-FROM-BoxColors` FOREIGN KEY (`box_color`) REFERENCES `BoxColors` (`boxColor`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_country_.BoxPrices-FROM-Countries` FOREIGN KEY (`country_`) REFERENCES `Countries` (`country`) ON UPDATE CASCADE,
  CONSTRAINT `fk_iso_currency.BoxPrices-FROM-CurrenciesIsoCodes` FOREIGN KEY (`iso_currency`) REFERENCES `Currencies` (`isoCurrency`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `BoxPrices` (`box_color`, `country_`, `iso_currency`, `price`) VALUES
('gold',	'belgium',	'eur',	49.99),
('gold',	'france',	'eur',	49.99),
('gold',	'other',	'eur',	49.99),
('regular',	'belgium',	'eur',	24.99),
('regular',	'france',	'eur',	24.99),
('regular',	'other',	'eur',	24.99),
('silver',	'belgium',	'eur',	34.99),
('silver',	'france',	'eur',	34.99),
('silver',	'other',	'eur',	34.99);

CREATE TABLE `BoxShipping` (
  `box_color` varchar(10) NOT NULL,
  `country_` varchar(100) NOT NULL,
  `iso_currency` varchar(10) NOT NULL,
  `shipPrice` double NOT NULL,
  `minTime` int NOT NULL,
  `maxTime` int NOT NULL,
  PRIMARY KEY (`box_color`,`iso_currency`,`country_`) USING BTREE,
  KEY `fk_country_.BoxShipping-FROM-Countries` (`country_`),
  KEY `fk_iso_currency.BoxShipping-FROM-CurrenciesIsoCodes` (`iso_currency`),
  CONSTRAINT `fk_box_color.BoxShipping-FROM-BoxColors` FOREIGN KEY (`box_color`) REFERENCES `BoxColors` (`boxColor`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_country_.BoxShipping-FROM-Countries` FOREIGN KEY (`country_`) REFERENCES `Countries` (`country`) ON UPDATE CASCADE,
  CONSTRAINT `fk_iso_currency.BoxShipping-FROM-CurrenciesIsoCodes` FOREIGN KEY (`iso_currency`) REFERENCES `Currencies` (`isoCurrency`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `BoxShipping` (`box_color`, `country_`, `iso_currency`, `shipPrice`, `minTime`, `maxTime`) VALUES
('gold',	'belgium',	'eur',	0,	2,	5),
('gold',	'france',	'eur',	0,	3,	7),
('gold',	'other',	'eur',	0,	3,	7),
('regular',	'belgium',	'eur',	3.1,	2,	5),
('regular',	'france',	'eur',	8.2,	3,	7),
('regular',	'other',	'eur',	8.2,	3,	7),
('silver',	'belgium',	'eur',	1.24,	2,	5),
('silver',	'france',	'eur',	3.28,	3,	7),
('silver',	'other',	'eur',	3.28,	3,	7);

CREATE TABLE `BrandsMeasures` (
  `brandName` varchar(100) NOT NULL,
  `body_part` varchar(30) NOT NULL,
  `size_name` varchar(100) NOT NULL,
  `unit_name` varchar(50) NOT NULL,
  `minMax` enum('min','max') NOT NULL,
  `value` double DEFAULT NULL,
  PRIMARY KEY (`brandName`,`body_part`,`size_name`,`minMax`,`unit_name`) USING BTREE,
  KEY `FK_body_part.BrandsMeasures-FROM-BodyParts` (`body_part`),
  KEY `FK_size_name.BrandsMeasures-FROM-Sizes` (`size_name`),
  KEY `FK_unit_name.BrandsMeasures-FROM-MeasureUnits` (`unit_name`),
  CONSTRAINT `FK_body_part.BrandsMeasures-FROM-BodyParts` FOREIGN KEY (`body_part`) REFERENCES `BodyParts` (`bodyPart`) ON UPDATE CASCADE,
  CONSTRAINT `FK_size_name.BrandsMeasures-FROM-Sizes` FOREIGN KEY (`size_name`) REFERENCES `Sizes` (`sizeName`) ON UPDATE CASCADE,
  CONSTRAINT `FK_unit_name.BrandsMeasures-FROM-MeasureUnits` FOREIGN KEY (`unit_name`) REFERENCES `MeasureUnits` (`unitName`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `BrandsMeasures` (`brandName`, `body_part`, `size_name`, `unit_name`, `minMax`, `value`) VALUES
('bershka',	'arm',	's',	'centimeter',	'max',	1000),
('boohoo',	'arm',	's',	'centimeter',	'max',	1000),
('cache cache',	'arm',	's',	'centimeter',	'max',	1000),
('h&m',	'arm',	's',	'centimeter',	'max',	1000),
('ikks',	'arm',	's',	'centimeter',	'max',	1000),
('jennyfer',	'arm',	's',	'centimeter',	'max',	1000),
('kiabi',	'arm',	's',	'centimeter',	'max',	1000),
('le temps des cerises',	'arm',	's',	'centimeter',	'max',	1000),
('mango',	'arm',	's',	'centimeter',	'max',	1000),
('missguided',	'arm',	's',	'centimeter',	'max',	1000),
('naf naf',	'arm',	's',	'centimeter',	'max',	1000),
('new look',	'arm',	's',	'centimeter',	'max',	1000),
('pepe jeans',	'arm',	's',	'centimeter',	'max',	1000),
('pretty little thing',	'arm',	's',	'centimeter',	'max',	1000),
('primark',	'arm',	's',	'centimeter',	'max',	1000),
('tommy hilfiger',	'arm',	's',	'centimeter',	'max',	1000),
('topshop',	'arm',	's',	'centimeter',	'max',	1000),
('zara',	'arm',	's',	'centimeter',	'max',	1000);

CREATE TABLE `BrandsPictures` (
  `brand_name` varchar(100) NOT NULL,
  `pictureID` int NOT NULL,
  `picture` varchar(100) NOT NULL,
  PRIMARY KEY (`brand_name`,`pictureID`),
  CONSTRAINT `FK_brand_name.BrandsPictures-FROM-BrandsMeasures` FOREIGN KEY (`brand_name`) REFERENCES `BrandsMeasures` (`brandName`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `BrandsPictures` (`brand_name`, `pictureID`, `picture`) VALUES
('bershka',	0,	'bershka0.jpg'),
('bershka',	1,	'bershka1.jpg'),
('boohoo',	0,	'boohoo0.jpg'),
('boohoo',	1,	'boohoo1.jpg'),
('cache cache',	0,	'cache-cache0.jpg'),
('cache cache',	1,	'cache-cache1.jpg'),
('h&m',	0,	'hm0.jpg'),
('h&m',	1,	'hm1.jpg'),
('ikks',	0,	'ikks0.jpg'),
('ikks',	1,	'ikks1.jpg'),
('jennyfer',	0,	'jennyfer0.jpg'),
('jennyfer',	1,	'jennyfer1.jpg'),
('kiabi',	0,	'kiabi0.jpg'),
('kiabi',	1,	'kiabi1.jpg'),
('le temps des cerises',	0,	'le-temps-des-cerises0.jpg'),
('le temps des cerises',	1,	'le-temps-des-cerises1.jpg'),
('mango',	0,	'mango0.jpg'),
('mango',	1,	'mango1.jpg'),
('missguided',	0,	'missguided0.jpg'),
('missguided',	1,	'missguided1.jpg'),
('naf naf',	0,	'naf-naf0.jpg'),
('naf naf',	1,	'naf-naf1.jpg'),
('new look',	0,	'new-look0.jpg'),
('new look',	1,	'new-look1.jpg'),
('pepe jeans',	0,	'pepejeans0.jpg'),
('pepe jeans',	1,	'pepejeans1.jpg'),
('pretty little thing',	0,	'pretty-little-thing0.jpg'),
('pretty little thing',	1,	'pretty-little-thing1.jpg'),
('primark',	0,	'primark0.jpg'),
('primark',	1,	'primark1.jpg'),
('tommy hilfiger',	0,	'Tommy-Hilfinger0.jpg'),
('tommy hilfiger',	1,	'Tommy-Hilfinger1.jpg'),
('topshop',	0,	'topshop0.jpg'),
('topshop',	1,	'topshop1.jpg'),
('zara',	0,	'zara0.jpg'),
('zara',	1,	'zara1.jpg');

CREATE TABLE `Categories` (
  `categoryName` varchar(100) NOT NULL,
  `googleCatNum` int NOT NULL,
  `googleCat` varchar(500) NOT NULL,
  PRIMARY KEY (`categoryName`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Categories` (`categoryName`, `googleCatNum`, `googleCat`) VALUES
('bathrobe',	2563,	'Apparel & Accessories > Clothing > Underwear & Socks > Lingerie Accessories'),
('bikini',	211,	'Apparel & Accessories > Clothing > Swimwear'),
('blazer',	5598,	'Apparel & Accessories > Clothing > Outerwear > Coats & Jackets'),
('bra',	214,	'Apparel & Accessories > Clothing > Underwear & Socks > Bras'),
('cardigan',	212,	'Apparel & Accessories > Clothing > Shirts & Tops'),
('cargo pants',	204,	'Apparel & Accessories > Clothing > Pants'),
('coat',	5598,	'Apparel & Accessories > Clothing > Outerwear > Coats & Jackets'),
('dress',	2271,	'Apparel & Accessories > Clothing > Dresses'),
('hawaiian shirt',	212,	'Apparel & Accessories > Clothing > Shirts & Tops'),
('hoodie',	212,	'Apparel & Accessories > Clothing > Shirts & Tops'),
('jacket',	5598,	'Apparel & Accessories > Clothing > Outerwear > Coats & Jackets'),
('jeans',	204,	'Apparel & Accessories > Clothing > Pants'),
('jumper',	212,	'Apparel & Accessories > Clothing > Shirts & Tops'),
('jumpsuits',	5250,	'Apparel & Accessories > Clothing > One-Pieces > Jumpsuits & Rompers'),
('long coat',	5598,	'Apparel & Accessories > Clothing > Outerwear > Coats & Jackets'),
('long-sleeve top',	212,	'Apparel & Accessories > Clothing > Shirts & Tops'),
('overalls',	7132,	'Apparel & Accessories > Clothing > One-Pieces > Overalls'),
('pant suits',	5183,	'Apparel & Accessories > Clothing > Suits > Pant Suits'),
('polo shirt',	212,	'Apparel & Accessories > Clothing > Shirts & Tops'),
('pullover',	212,	'Apparel & Accessories > Clothing > Shirts & Tops'),
('sheath dress',	2271,	'Apparel & Accessories > Clothing > Dresses'),
('shirt',	212,	'Apparel & Accessories > Clothing > Shirts & Tops'),
('shorts',	207,	'Apparel & Accessories > Clothing > Shorts'),
('singlet',	2745,	'Apparel & Accessories > Clothing > Underwear & Socks > Undershirts'),
('skirt',	1581,	'Apparel & Accessories > Clothing > Skirts'),
('skirt suits',	1516,	'Apparel & Accessories > Clothing > Suits > Skirt Suits'),
('skorts',	5344,	'Apparel & Accessories > Clothing > Skorts'),
('sleeveless shirt',	212,	'Apparel & Accessories > Clothing > Shirts & Tops'),
('slip',	2562,	'Apparel & Accessories > Clothing > Underwear & Socks > Underwear'),
('smokings',	1580,	'Apparel & Accessories > Clothing > Suits > Tuxedos'),
('socks',	209,	'Apparel & Accessories > Clothing > Underwear & Socks > Socks'),
('stockings',	2563,	'Apparel & Accessories > Clothing > Underwear & Socks > Lingerie Accessories'),
('suit',	1594,	'Apparel & Accessories > Clothing > Suits'),
('sweater',	212,	'Apparel & Accessories > Clothing > Shirts & Tops'),
('swimsuit',	211,	'Apparel & Accessories > Clothing > Swimwear'),
('t-shirt',	212,	'Apparel & Accessories > Clothing > Shirts & Tops'),
('tank top',	212,	'Apparel & Accessories > Clothing > Shirts & Tops'),
('top',	212,	'Apparel & Accessories > Clothing > Shirts & Tops'),
('trench coat',	5598,	'Apparel & Accessories > Clothing > Outerwear > Coats & Jackets'),
('trousers',	204,	'Apparel & Accessories > Clothing > Pants'),
('underpants',	5834,	'Apparel & Accessories > Clothing > Underwear & Socks > Underwear Slips'),
('uniform',	2306,	'Apparel & Accessories > Clothing > Uniforms'),
('vest',	1831,	'Apparel & Accessories > Clothing > Outerwear > Vests'),
('winter coat',	5598,	'Apparel & Accessories > Clothing > Outerwear > Coats & Jackets');

CREATE TABLE `Collections` (
  `collectionName` varchar(100) NOT NULL,
  PRIMARY KEY (`collectionName`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Collections` (`collectionName`) VALUES
('drop1'),
('women');

CREATE TABLE `Companies` (
  `company` varchar(50) NOT NULL,
  PRIMARY KEY (`company`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Companies` (`company`) VALUES
('stripe');

CREATE TABLE `Constants` (
  `constName` varchar(50) NOT NULL,
  `stringValue` varchar(50) DEFAULT NULL,
  `jsonValue` text,
  `setDate` datetime NOT NULL,
  `description` text,
  PRIMARY KEY (`constName`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Constants` (`constName`, `stringValue`, `jsonValue`, `setDate`, `description`) VALUES
('BASKET_TYPE',	'basketproduct',	NULL,	'2020-02-27 00:00:00',	'Type of prroduct witch go to basket only.'),
('BOX_TYPE',	'boxproduct',	NULL,	'2020-02-27 00:00:00',	'Type of prroduct witch go to boxes only.'),
('COLOR_TEXT_05',	'rgba(14, 36, 57, 0.5)',	NULL,	'2020-04-17 00:00:00',	'A css variable color. This color is used as remplacement color for white colors.'),
('COLOR_TEXT_08',	'rgba(14, 36, 57, 0.8)',	NULL,	'2020-04-09 00:00:00',	'A css variable color. This color is used as remplacement color for white colors.'),
('DB_TYPES_LENGTH',	NULL,	'{\"date\": 15, \"enum\": -1, \"json\": 16776192, \"text\": 2147483647, \"double\": 11, \"tinyint\": 5, \"datetime\": 25}',	'2020-07-12 00:00:00',	'Holds the length of the database type. that the length can\'t be extracted with the table description. '),
('DEFAULT_COUNTRY_NAME',	'other',	NULL,	'2020-03-29 00:00:00',	'The default country of a user if his localisation is not supported by the System.'),
('DEFAULT_ISO_CURRENCY',	'eur',	NULL,	'2020-05-02 00:00:00',	'The default currency iso code 2 of a user if his localcurrency is not supported by the System.'),
('DEFAULT_LANGUAGE',	'en',	NULL,	'2020-02-28 00:00:00',	'Default language given to the visitor if his driver language is not supported by the web site.'),
('GRID_USED_INSIDE',	'grid.php',	NULL,	'2020-03-30 00:00:00',	'Indicate the value of the attribut \"inside\" in TranslationStation table. Used to get the translation to the \"inside\" indicated.\r\nIts the file name of the method name where the translation is used.'),
('INFOS_COMPANY',	NULL,	'{\"brand\": \"i&meim\", \"media\": {\"faceboock\": {\"link\": \"https://www.facebook.com/iandmeimofficial/\", \"logo\": \"facebook2x.png\"}, \"instagram\": {\"link\": \"https://www.instagram.com/iandmeim/\", \"logo\": \"instagram2x.png\"}}, \"address\": {\"city\": \"sint-genesius-rode\", \"door\": null, \"phone\": \"32\", \"state\": \"flemish brabant\", \"street\": null, \"country\": \"belgium\", \"zipcode\": \"1640\"}}',	'2020-10-18 20:35:28',	'Holds all datas about the company.'),
('MAX_MEASURE',	'4',	NULL,	'2020-04-23 00:00:00',	'Indicate how much measure can be holded by a user.'),
('MAX_PRODUCT_CUBE_DISPLAYABLE',	'3',	NULL,	'2020-04-02 00:00:00',	'The maximum of product\'s cubes displayable before to display the plus symbol including the plus symbole in the count of cube to display.\r\nex: MAX_PRODUCT_CUBE_DISPLAYABLE = 4\r\nwill display: 3 color cube + 1 symbole cube = 4 cubes\r\n\r\nThis number of cube must avoid to display cubes in multiple ligne and disturbe the grid arrangement.\r\nNOTE: the number of cube displayed exactly MAX_PRODUCT_CUBE_DISPLAYABLE cause this constante include already the plus symbole'),
('MAX_RETURN_DAYS',	'14',	NULL,	'2020-12-15 17:21:01',	'The maximum days that the client is allowed to claims a return and refund.'),
('NB_DAYS_BEFORE',	'15',	NULL,	'2020-02-21 21:28:28',	'The number of days to go back in navigation history.'),
('ORDER_DEFAULT_STATUS',	'US68',	NULL,	'2020-02-26 21:37:00',	'The default value given to a new order\'s status.'),
('ORDER_STATUS_STOCK_ERROR',	'ER30',	NULL,	'2020-10-11 12:30:54',	'Holds the status of an order when the order has an product out of stock.'),
('PRICE_MESSAGE',	'free with meimbox',	NULL,	'2020-04-01 00:00:00',	'message to display instead of boxproduct\'s price because a boxProduct hasn\'t any price'),
('STRIPE_MAX_PROD_IMG',	'8',	NULL,	'2020-10-07 13:15:57',	'Holds max images allowed in Stripe product'),
('SUPPORTED_SIZES',	NULL,	'{\"alpha\": [\"4xl\", \"3xl\", \"xxl\", \"xl\", \"l\", \"m\", \"s\", \"xs\", \"xxs\"], \"numeric\": [56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32]}',	'2020-07-18 21:17:12',	'List of system\'s supported sizes.'),
('SUPPORTED_UNIT',	NULL,	'[\"centimeter\", \"inch\"]',	'2020-04-24 00:00:00',	'List of measure unit available for user\'s input'),
('SYSTEM_ID',	'1',	NULL,	'2020-02-26 21:27:40',	'The ID of the system used as author to update order status.'),
('WHITE_RGB',	'#ffffff',	NULL,	'2020-04-09 00:00:00',	'The white color\'s rbg code.');

CREATE TABLE `Cookies` (
  `cookieID` varchar(50) NOT NULL,
  `cookiePeriod` int NOT NULL,
  `cookieDomain` varchar(50) DEFAULT NULL,
  `cookiePath` varchar(50) DEFAULT NULL,
  `cookieSecure` tinyint(1) NOT NULL,
  `cookieHttponly` tinyint(1) NOT NULL,
  PRIMARY KEY (`cookieID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Cookies` (`cookieID`, `cookiePeriod`, `cookieDomain`, `cookiePath`, `cookieSecure`, `cookieHttponly`) VALUES
('ADM',	10800,	NULL,	NULL,	1,	1),
('ADRS',	86400,	NULL,	NULL,	1,	1),
('CHKT_LNCHD',	86400,	NULL,	'checkout',	1,	1),
('CLT',	31536000,	NULL,	NULL,	1,	1),
('LCK',	120,	NULL,	NULL,	1,	1),
('TT_MSRMNT_CT',	31536000,	NULL,	NULL,	0,	1),
('TT_RFBRND',	31536000,	NULL,	NULL,	0,	1),
('TT_SZTP',	31536000,	NULL,	NULL,	0,	1),
('VIS',	94608000,	NULL,	NULL,	1,	1);

CREATE TABLE `Countries` (
  `country` varchar(100) NOT NULL,
  `isoCountry` varchar(10) DEFAULT NULL,
  `iso_currency` varchar(10) NOT NULL,
  `isUE` tinyint(1) DEFAULT NULL,
  `vat` double NOT NULL,
  PRIMARY KEY (`country`),
  KEY `fk_iso_currency.Countries-FROM-CurrenciesIsoCodes` (`iso_currency`),
  CONSTRAINT `fk_iso_currency.Countries-FROM-CurrenciesIsoCodes` FOREIGN KEY (`iso_currency`) REFERENCES `Currencies` (`isoCurrency`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Countries` (`country`, `isoCountry`, `iso_currency`, `isUE`, `vat`) VALUES
('belgium',	'be',	'eur',	1,	0.21),
('france',	'fr',	'eur',	1,	0.2),
('other',	'o',	'eur',	0,	0);

CREATE TABLE `Currencies` (
  `isoCurrency` varchar(10) NOT NULL,
  `currencyName` varchar(50) NOT NULL,
  `symbol` varchar(10) NOT NULL,
  `EURtoCurrency` double NOT NULL,
  `isDefault` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`isoCurrency`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Currencies` (`isoCurrency`, `currencyName`, `symbol`, `EURtoCurrency`, `isDefault`) VALUES
('eur',	'euro',	'€',	1,	1);

CREATE TABLE `Cuts` (
  `cutName` varchar(30) NOT NULL,
  `cutMeasure` double NOT NULL,
  `unit_name` varchar(50) NOT NULL,
  PRIMARY KEY (`cutName`),
  KEY `fk_unit_name.Cuts-FROM-MeasureUnits` (`unit_name`),
  CONSTRAINT `fk_unit_name.Cuts-FROM-MeasureUnits` FOREIGN KEY (`unit_name`) REFERENCES `MeasureUnits` (`unitName`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Cuts` (`cutName`, `cutMeasure`, `unit_name`) VALUES
('normal',	5,	'centimeter'),
('wide',	10,	'centimeter');

CREATE TABLE `Details` (
  `orderId` varchar(100) NOT NULL,
  `prodId` varchar(100) NOT NULL,
  `product_type` varchar(50) NOT NULL,
  `size_name` varchar(100) NOT NULL,
  `weight` double NOT NULL,
  `buy_price` double NOT NULL,
  `sellPrice` double NOT NULL,
  `discount_value` double NOT NULL,
  `shipping` double NOT NULL,
  `quantity` int NOT NULL,
  `stillStock` tinyint(1) NOT NULL,
  PRIMARY KEY (`orderId`,`prodId`,`size_name`),
  KEY `fk_prodId.Details-FROM-Products` (`prodId`),
  CONSTRAINT `fk_orderId.Details-FROM-Orders` FOREIGN KEY (`orderId`) REFERENCES `Orders` (`orderID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_prodId.Details-FROM-Products` FOREIGN KEY (`prodId`) REFERENCES `Products` (`prodID`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Devices` (
  `navId` varchar(50) NOT NULL,
  `deviceDate` datetime NOT NULL,
  `deviceDatas` text NOT NULL,
  `userAgent` varchar(250) NOT NULL,
  `isBot` tinyint(1) NOT NULL,
  `botInfo` text,
  `osName` varchar(50) DEFAULT NULL,
  `osVersion` varchar(50) DEFAULT NULL,
  `osPlateform` varchar(50) DEFAULT NULL,
  `driverType` varchar(50) DEFAULT NULL,
  `driverName` varchar(50) DEFAULT NULL,
  `driverVersion` varchar(50) DEFAULT NULL,
  `driverEngine` varchar(50) DEFAULT NULL,
  `driverEngineVersion` varchar(50) DEFAULT NULL,
  `deviceType` varchar(50) DEFAULT NULL,
  `deviceBrand` varchar(50) DEFAULT NULL,
  `deviceModel` varchar(50) DEFAULT NULL,
  KEY `fk_navId.Devices-FROM-Navigations` (`navId`),
  CONSTRAINT `fk_navId.Devices-FROM-Navigations` FOREIGN KEY (`navId`) REFERENCES `Navigations` (`navID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `DiscountCodes` (
  `discountCode` varchar(50) NOT NULL,
  `discount_type` varchar(50) NOT NULL,
  `rate` float NOT NULL,
  `maxAmount` float DEFAULT NULL,
  `minAmount` float NOT NULL,
  `nbUse` int DEFAULT NULL,
  `isCumulable` tinyint(1) NOT NULL,
  PRIMARY KEY (`discountCode`),
  KEY `fk_discount_type.DiscountCodes-FROM-DiscountCodeType` (`discount_type`),
  CONSTRAINT `fk_discount_type.DiscountCodes-FROM-DiscountCodeType` FOREIGN KEY (`discount_type`) REFERENCES `DiscountCodeType` (`discountType`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `DiscountCodes` (`discountCode`, `discount_type`, `rate`, `maxAmount`, `minAmount`, `nbUse`, `isCumulable`) VALUES
('free_shipping_be',	'on_shipping',	1,	NULL,	30,	NULL,	1),
('free_shipping_fr',	'on_shipping',	1,	NULL,	30,	NULL,	1),
('free_shipping_o',	'on_shipping',	0,	NULL,	0,	-1,	0);

CREATE TABLE `DiscountCodes-Countries` (
  `discount_code` varchar(50) NOT NULL,
  `country_` varchar(100) NOT NULL,
  `beginDate` datetime DEFAULT NULL,
  `endDate` datetime DEFAULT NULL,
  PRIMARY KEY (`discount_code`,`country_`),
  KEY `fk_country_.DiscountCodes-Countries-FROM-Countries` (`country_`),
  CONSTRAINT `fk_country_.DiscountCodes-Countries-FROM-Countries` FOREIGN KEY (`country_`) REFERENCES `Countries` (`country`) ON UPDATE CASCADE,
  CONSTRAINT `fk_discount_code.DiscountCodes-Countries-FROM-DiscountCodes` FOREIGN KEY (`discount_code`) REFERENCES `DiscountCodes` (`discountCode`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `DiscountCodeType` (
  `discountType` varchar(50) NOT NULL,
  PRIMARY KEY (`discountType`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `DiscountCodeType` (`discountType`) VALUES
('on_shipping'),
('on_sum_prods');

CREATE TABLE `DiscountValues` (
  `discountValue` double NOT NULL,
  PRIMARY KEY (`discountValue`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `EmailsSent` (
  `messageID` varchar(100) NOT NULL,
  `recipient` varchar(100) NOT NULL,
  `recipientName` varchar(50) DEFAULT NULL,
  `mailer_` varchar(30) NOT NULL,
  `subject` varchar(30) NOT NULL,
  `sender` varchar(100) NOT NULL,
  `toField` tinyint(1) NOT NULL,
  `ccField` tinyint(1) NOT NULL,
  `bccField` tinyint(1) NOT NULL,
  `replyTo` varchar(100) NOT NULL,
  `content` text NOT NULL,
  `sendDate` datetime NOT NULL,
  `code` varchar(50) DEFAULT NULL,
  `message` varchar(256) DEFAULT NULL,
  PRIMARY KEY (`messageID`,`recipient`),
  KEY `messageID` (`messageID`),
  KEY `fk_mailer_.EmailsSent-FROM-Mailers` (`mailer_`),
  CONSTRAINT `fk_mailer_.EmailsSent-FROM-Mailers` FOREIGN KEY (`mailer_`) REFERENCES `Mailers` (`mailer`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `EmailsStatus` (
  `messageId` varchar(100) NOT NULL,
  `status` varchar(50) NOT NULL,
  `reason` varchar(50) DEFAULT NULL,
  `url` varchar(256) DEFAULT NULL,
  `sendingIP` varchar(50) DEFAULT NULL,
  `sendDate` datetime NOT NULL,
  `eventDate` datetime NOT NULL,
  PRIMARY KEY (`messageId`,`status`,`eventDate`),
  CONSTRAINT `fk-messageId.EmailsStatus-FROM-EmailsSent` FOREIGN KEY (`messageId`) REFERENCES `EmailsSent` (`messageID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `EmailsTags` (
  `messageId` varchar(100) NOT NULL,
  `tag` varchar(30) NOT NULL,
  PRIMARY KEY (`messageId`,`tag`),
  CONSTRAINT `fk-messageId.EmailsTags-FROM-EmailsSent` FOREIGN KEY (`messageId`) REFERENCES `EmailsSent` (`messageID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Events` (
  `eventCode` varchar(50) NOT NULL,
  `event` varchar(30) NOT NULL,
  `element` varchar(30) NOT NULL,
  `name` varchar(100) NOT NULL,
  `result` varchar(100) NOT NULL,
  PRIMARY KEY (`eventCode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Events` (`eventCode`, `event`, `element`, `name`, `result`) VALUES
('01',	'click',	'button',	'opener of asshole',	'open ass hole'),
('evt_cd_0',	'scroll',	'scroller',	'current page',	'scroll the page'),
('evt_cd_1',	'laod',	'page',	'device size',	'get width and height of device'),
('evt_cd_10',	'launch',	'alert',	'alert pop',	'display alert message'),
('evt_cd_100',	'click',	'button',	'opener for measure editor from product adder form',	'open measure editor popup'),
('evt_cd_101',	'click',	'button',	'new measure adder in measure manager popup',	'open measure editor popup'),
('evt_cd_102',	'click',	'button',	'submit focussed measure block',	'request to select a measure'),
('evt_cd_103',	'response',	'json',	'request to select a measure',	'select measure'),
('evt_cd_104',	'click',	'button',	'closer of measure manager popup',	'close measure manager popup'),
('evt_cd_105',	'click',	'checkbox',	'from measure editor',	'check or uncheck'),
('evt_cd_106',	'blur',	'input',	'from measure editor',	'finished typing'),
('evt_cd_107',	'submit',	'form',	'submit measure editor popup',	'request to add a new measure'),
('evt_cd_108',	'response',	'json',	'request to add a new measure',	'add a new measure'),
('evt_cd_109',	'submit',	'form',	'submit measure editor popup',	'request to update a measure'),
('evt_cd_11',	'click',	'collapse',	'product description',	'open collapse'),
('evt_cd_110',	'response',	'json',	'request to update a measure',	'update a measure'),
('evt_cd_111',	'click',	'button',	'closer of measure editor popup',	'close measure editor popup'),
('evt_cd_112',	'click',	'button',	'closer of size editor popup',	'close size editor popup'),
('evt_cd_113',	'click',	'button',	'mobile filter from product grid',	'open mobile filter'),
('evt_cd_114',	'click',	'button',	'mobile filter from product grid',	'close mobile filter'),
('evt_cd_115',	'click',	'dropdown',	'order filter from product grid',	'open'),
('evt_cd_116',	'click',	'dropdown',	'order filter from product grid',	'close'),
('evt_cd_117',	'click',	'dropdown',	'product type filter from product grid',	'open'),
('evt_cd_118',	'click',	'dropdown',	'product type filter from product grid',	'close'),
('evt_cd_119',	'click',	'dropdown',	'category filter from product grid',	'open'),
('evt_cd_12',	'click',	'collapse',	'product description',	'close collapse'),
('evt_cd_120',	'click',	'dropdown',	'category filter from product grid',	'close'),
('evt_cd_121',	'click',	'dropdown',	'size filter from product grid',	'open'),
('evt_cd_122',	'click',	'dropdown',	'size filter from product grid',	'close'),
('evt_cd_123',	'click',	'dropdown',	'color filter from product grid',	'open'),
('evt_cd_124',	'click',	'dropdown',	'color filter from product grid',	'close'),
('evt_cd_125',	'click',	'checkbox',	'from filter of product grid',	'check or uncheck'),
('evt_cd_126',	'scroll',	'scroller',	'current page',	'drop facebook pixel: scroll over'),
('evt_cd_127',	'click',	'tutorial',	'type of size from size forms',	'animate with tutorial '),
('evt_cd_128',	'click',	'tutorial',	'brand reference from size forms',	'animate with tutorial '),
('evt_cd_129',	'click',	'tutorial',	'measurement from size forms',	'animate with tutorial '),
('evt_cd_13',	'click',	'collapse',	'shipping infos',	'open collapse'),
('evt_cd_130',	'click',	'button',	'deleter of sticker from filter of product grid',	'remove filter from filter of product grid'),
('evt_cd_14',	'click',	'collapse',	'shipping infos',	'close collapse'),
('evt_cd_15',	'click',	'button',	'carrousel',	'slide right'),
('evt_cd_16',	'click',	'button',	'carrousel',	'slide left'),
('evt_cd_17',	'click',	'dropdown',	'order summary container',	'open'),
('evt_cd_18',	'click',	'dropdown',	'order summary container',	'close'),
('evt_cd_19',	'click',	'dropdown',	'country from order summary',	'open'),
('evt_cd_2',	'click',	'button',	'burger from header',	'open side menu'),
('evt_cd_20',	'click',	'dropdown',	'country from order summary',	'close'),
('evt_cd_21',	'click',	'checkbox',	'one country of the countries dropdown from order summary',	'request to select country'),
('evt_cd_22',	'response',	'json',	'request select country',	'select country'),
('evt_cd_23',	'click',	'collapse',	'support contacts from order summary',	'open'),
('evt_cd_24',	'click',	'collapse',	'support contacts from order summary',	'close'),
('evt_cd_25',	'click',	'button',	'new address adder from address selector form',	'open address editor popup'),
('evt_cd_26',	'click',	'button',	'address block from address selector form',	'focus address'),
('evt_cd_27',	'click',	'button',	'submit focus address',	'request to select address'),
('evt_cd_28',	'response',	'json',	'request to select address',	'select address'),
('evt_cd_29',	'click',	'dropdown',	'checkout cart',	'open'),
('evt_cd_3',	'click',	'button',	'opener for box adder from side menu',	'open boxes pricing popup'),
('evt_cd_30',	'click',	'dropdown',	'checkout cart',	'close'),
('evt_cd_31',	'click',	'button',	'submit checkout summary',	'request to launch checkout'),
('evt_cd_32',	'response',	'json',	'request to launch checkout',	'launch checkout'),
('evt_cd_33',	'click',	'button',	'closer of address editor popup',	'close address editor popup'),
('evt_cd_34',	'blur',	'input',	'from address form',	'finished typing'),
('evt_cd_35',	'click',	'dropdown',	'country from address form',	'open'),
('evt_cd_36',	'click',	'dropdown',	'country from address form',	'close'),
('evt_cd_37',	'click',	'checkbox',	'country of the country dropdown from address form',	'request to select country'),
('evt_cd_38',	'click',	'button',	'submit address form',	'request to add new address'),
('evt_cd_39',	'response',	'json',	'request add new address',	'add new address'),
('evt_cd_4',	'click',	'button',	'burger from header',	'close side menu'),
('evt_cd_40',	'click',	'button',	'sign up switcher from sign form',	'switch to sign up form'),
('evt_cd_41',	'click',	'button',	'sign in switcher from sign form',	'switch to sign in form'),
('evt_cd_42',	'click',	'checkbox',	'from sign up form',	'check or uncheck'),
('evt_cd_43',	'blur',	'input',	'from sign up form',	'finished typing'),
('evt_cd_44',	'click',	'checkbox',	'from sign in forrm',	'check or uncheck'),
('evt_cd_45',	'blur',	'input',	'from sign in forrm',	'finished typing'),
('evt_cd_46',	'click',	'button',	'submit sign up form',	'request to sign up'),
('evt_cd_47',	'response',	'json',	'request to sign up',	'sign up'),
('evt_cd_48',	'click',	'button',	'submit sign in form',	'request to sign in'),
('evt_cd_49',	'response',	'json',	'request to sign in',	'sign in'),
('evt_cd_5',	'click',	'button',	'opener for box adder from header',	'open boxes pricing popup'),
('evt_cd_50',	'click',	'button',	'closer of sign popup',	'close sign popup'),
('evt_cd_51',	'click',	'button',	'add a new box from boxes pricing popup',	'request to add a new box'),
('evt_cd_52',	'response',	'json',	'request add box',	'add new box in cart'),
('evt_cd_53',	'click',	'button',	'closer of boxes pricing popup',	'close boxes pricing popup'),
('evt_cd_54',	'click',	'button',	'cart logo from mobile header',	'request cart popup'),
('evt_cd_55',	'click',	'button',	'cart logo from computer header',	'request cart popup'),
('evt_cd_56',	'response',	'json',	'request cart popup',	'open cart popup'),
('evt_cd_57',	'click',	'button',	'deleter of box',	'request to delete box'),
('evt_cd_58',	'response',	'json',	'request to delete box',	'delete box'),
('evt_cd_59',	'click',	'button',	'arrow of box',	'open box content'),
('evt_cd_6',	'click',	'button',	'opener for box adder from box manager popup',	'open boxes pricing popup'),
('evt_cd_60',	'click',	'button',	'arrow of box',	'close box content'),
('evt_cd_61',	'click',	'button',	'deleter of product in box',	'request to delete product from box'),
('evt_cd_62',	'response',	'json',	'request to delete product from box',	'delete product from box'),
('evt_cd_63',	'click',	'button',	'updater of product in box',	'open mini-pop of product'),
('evt_cd_64',	'click',	'button',	'mover of product in mini-pop of product in box',	'request box manager popup'),
('evt_cd_65',	'response',	'json',	'request box manager popup',	'open box manager popup'),
('evt_cd_66',	'click',	'button',	'submit focussed destination box',	'request to move product to focussed box'),
('evt_cd_67',	'response',	'json',	'request to move product to focussed box',	'move product to focussed box'),
('evt_cd_68',	'click',	'button',	'updater of size in mini-pop of product in box',	'request size editor popup'),
('evt_cd_69',	'response',	'json',	'request size editor popup',	'open size editor popup'),
('evt_cd_7',	'click',	'button',	'sign logo from header',	'open sign popup'),
('evt_cd_70',	'click',	'button',	'closer of cart popup',	'close cart popup'),
('evt_cd_71',	'click',	'button',	'box block',	'focus on box'),
('evt_cd_72',	'click',	'button',	'closer of box manager popup',	'close box manager popup'),
('evt_cd_73',	'click',	'checkbox',	'from size editor popup',	'check or uncheck'),
('evt_cd_74',	'blur',	'input',	'from size editor popup',	'finished typing'),
('evt_cd_75',	'click',	'checkbox',	'from product adder form',	'check or uncheck'),
('evt_cd_76',	'click',	'dropdown',	'measure cut from size editor popup',	'open'),
('evt_cd_77',	'click',	'dropdown',	'measure cut from size editor popup',	'close'),
('evt_cd_78',	'click',	'dropdown',	'measure cut from product adder form',	'open'),
('evt_cd_79',	'click',	'dropdown',	'measure cut from product adder form',	'close'),
('evt_cd_8',	'click',	'button',	'sign logo from side menu',	'open sign popup'),
('evt_cd_80',	'click',	'button',	'submit size editor',	'request to update product'),
('evt_cd_81',	'response',	'json',	'request to update product',	'update product'),
('evt_cd_82',	'click',	'button',	'submit product adder form',	'request to check if still stock for the submitted product'),
('evt_cd_83',	'response',	'json',	'request to check if still stock for the submitted product',	'still stock for the submitted product'),
('evt_cd_84',	'click',	'button',	'submit focussed destination box',	'request to add new product'),
('evt_cd_85',	'response',	'json',	'request to add new product',	'add new product'),
('evt_cd_86',	'click',	'button',	'opener for brand adder from size editor popup',	'open brand popup'),
('evt_cd_87',	'click',	'button',	'opener for brand adder from product adder form',	'open brand popup'),
('evt_cd_88',	'click',	'button',	'closer of brand popup',	'close brand popup'),
('evt_cd_89',	'click',	'button',	'brand logo',	'focus brand'),
('evt_cd_9',	'launch',	'alert',	'ask pop',	'display ask message'),
('evt_cd_90',	'click',	'button',	'submit focussed brand',	'request to select brand'),
('evt_cd_91',	'response',	'json',	'request to select brand',	'select brand'),
('evt_cd_92',	'click',	'button',	'opener for measure manager from size editor popup',	'open measure manager popup'),
('evt_cd_93',	'click',	'button',	'opener for measure manager from product adder form',	'open measure manager popup'),
('evt_cd_94',	'click',	'button',	'measure block',	'focus measure'),
('evt_cd_95',	'click',	'button',	'deleter of measure block',	'request to delete measure'),
('evt_cd_96',	'response',	'json',	'request to delete measure',	'delete measure'),
('evt_cd_97',	'click',	'button',	'updater of measure block',	'request measure editor popup'),
('evt_cd_98',	'response',	'json',	' request measure editor popup',	'open measure editor popup'),
('evt_cd_99',	'click',	'button',	'opener for measure editor from size editor popup',	'open measure editor popup');

CREATE TABLE `EventsDatas` (
  `eventId` varchar(50) NOT NULL,
  `dataKey` varchar(100) NOT NULL,
  `dataValue` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`eventId`,`dataKey`),
  CONSTRAINT `fk-eventId.EventsDatas-FROM-Navigations-Events` FOREIGN KEY (`eventId`) REFERENCES `Navigations-Events` (`eventID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Languages` (
  `langIsoCode` varchar(10) NOT NULL,
  `langName` varchar(50) NOT NULL,
  `langLocalName` varchar(50) NOT NULL,
  PRIMARY KEY (`langIsoCode`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Languages` (`langIsoCode`, `langName`, `langLocalName`) VALUES
('en',	'english',	'english'),
('es',	'espagnol',	'español'),
('fr',	'french',	'français');

CREATE TABLE `Locations` (
  `navId` varchar(50) NOT NULL,
  `locationDate` datetime NOT NULL,
  `ip` varchar(100) DEFAULT NULL,
  `status` varchar(20) NOT NULL,
  `message` varchar(100) DEFAULT NULL,
  `continent` varchar(50) DEFAULT NULL,
  `continentCode` varchar(10) DEFAULT NULL,
  `country` varchar(50) DEFAULT NULL,
  `countryCode` varchar(10) DEFAULT NULL,
  `region` varchar(10) DEFAULT NULL,
  `regionName` varchar(100) DEFAULT NULL,
  `city` varchar(100) DEFAULT NULL,
  `district` varchar(100) DEFAULT NULL,
  `zip` varchar(50) DEFAULT NULL,
  `lat` float DEFAULT NULL,
  `lon` float DEFAULT NULL,
  `timezone` varchar(50) DEFAULT NULL,
  `offset` int DEFAULT NULL,
  `currency` varchar(50) DEFAULT NULL,
  `isp` varchar(100) DEFAULT NULL,
  `ispOrg` varchar(100) DEFAULT NULL,
  `ispAs` varchar(100) DEFAULT NULL,
  `asname` varchar(100) DEFAULT NULL,
  `reverse` varchar(100) DEFAULT NULL,
  `mobile` tinyint(1) DEFAULT NULL,
  `proxy` tinyint(1) DEFAULT NULL,
  `hosting` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`navId`) USING BTREE,
  CONSTRAINT `fk-navId.Locations-FROM-Navigations` FOREIGN KEY (`navId`) REFERENCES `Navigations` (`navID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Mailers` (
  `mailer` varchar(30) NOT NULL,
  PRIMARY KEY (`mailer`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Mailers` (`mailer`) VALUES
('BlueAPI');

CREATE TABLE `MeasureUnits` (
  `unitName` varchar(50) NOT NULL,
  `measureUnit` varchar(10) DEFAULT NULL,
  `toSystUnit` double DEFAULT NULL,
  PRIMARY KEY (`unitName`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `MeasureUnits` (`unitName`, `measureUnit`, `toSystUnit`) VALUES
('centimeter',	'cm',	1),
('eu',	NULL,	NULL),
('inch',	'inch',	2.54),
('uk',	NULL,	NULL),
('us',	NULL,	NULL);

CREATE TABLE `Navigations` (
  `navID` varchar(50) NOT NULL,
  `userId` varchar(50) NOT NULL,
  `xhrFrom` varchar(50) DEFAULT NULL,
  `navDate` datetime NOT NULL,
  `url` varchar(1000) NOT NULL,
  `webroot` varchar(50) NOT NULL,
  `path` varchar(100) NOT NULL,
  `timeOn` int DEFAULT NULL,
  PRIMARY KEY (`navID`) USING BTREE,
  KEY `fk_userId.Pages-FROM-Users` (`userId`),
  CONSTRAINT `fk_userId.Pages-FROM-Users` FOREIGN KEY (`userId`) REFERENCES `Users` (`userID`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Navigations-Events` (
  `xhrId` varchar(50) NOT NULL,
  `eventID` varchar(50) NOT NULL,
  `event_code` varchar(50) NOT NULL,
  `eventDate` bigint NOT NULL,
  PRIMARY KEY (`xhrId`) USING BTREE,
  UNIQUE KEY `eventID` (`eventID`) USING BTREE,
  KEY `event_code` (`event_code`),
  CONSTRAINT `fk-event_code.Navigations-Events-FROM-Events` FOREIGN KEY (`event_code`) REFERENCES `Events` (`eventCode`) ON UPDATE CASCADE,
  CONSTRAINT `fk-navId.Navigations-Events-FROM-Navigations` FOREIGN KEY (`xhrId`) REFERENCES `Navigations` (`navID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `NavigationsParameters` (
  `navId` varchar(50) NOT NULL,
  `paramKey` varchar(100) NOT NULL,
  `paramValue` varchar(100) NOT NULL,
  PRIMARY KEY (`navId`,`paramKey`) USING BTREE,
  CONSTRAINT `fk-navId.NavigationsParameters-FROM-Navigations` FOREIGN KEY (`navId`) REFERENCES `Navigations` (`navID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Orders` (
  `orderID` varchar(100) NOT NULL,
  `userId` varchar(50) NOT NULL,
  `stripeCheckoutId` varchar(100) NOT NULL,
  `iso_currency` varchar(10) NOT NULL,
  `vatRate` float NOT NULL,
  `vat` float NOT NULL,
  `hvat` float NOT NULL,
  `sellPrice` float NOT NULL,
  `discount` float NOT NULL,
  `subtotal` float NOT NULL,
  `shipping` float NOT NULL,
  `shipDiscount` float NOT NULL,
  `total` float NOT NULL,
  `setDate` datetime NOT NULL,
  PRIMARY KEY (`orderID`),
  UNIQUE KEY `stripeSessionId` (`stripeCheckoutId`),
  KEY `fk_userId.Orders-FROM-Users` (`userId`),
  KEY `fk_iso_currency.Orders-FROM-Currencies` (`iso_currency`),
  CONSTRAINT `fk_iso_currency.Orders-FROM-Currencies` FOREIGN KEY (`iso_currency`) REFERENCES `Currencies` (`isoCurrency`) ON UPDATE CASCADE,
  CONSTRAINT `fk_stripeSessionId.Orders-FROM-StripeCheckoutSessions` FOREIGN KEY (`stripeCheckoutId`) REFERENCES `StripeCheckoutSessions` (`sessionID`) ON UPDATE CASCADE,
  CONSTRAINT `fk_userId.Orders-FROM-Users` FOREIGN KEY (`userId`) REFERENCES `Users` (`userID`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Orders-Addresses` (
  `orderId` varchar(100) NOT NULL,
  `address` varchar(100) NOT NULL,
  `zipcode` varchar(50) NOT NULL,
  `country_` varchar(100) NOT NULL,
  `appartement` varchar(100) DEFAULT NULL,
  `province` varchar(100) NOT NULL,
  `city` varchar(100) NOT NULL,
  `phoneNumber` varchar(50) DEFAULT NULL,
  `setDate` datetime NOT NULL,
  PRIMARY KEY (`orderId`),
  KEY `fk_country_.Orders-Addresses-FROM-Countries` (`country_`),
  CONSTRAINT `fk_country_.Orders-Addresses-FROM-Countries` FOREIGN KEY (`country_`) REFERENCES `Countries` (`country`) ON UPDATE CASCADE,
  CONSTRAINT `fk_orderId.Orders-Addresses-FROM-Orders` FOREIGN KEY (`orderId`) REFERENCES `Orders` (`orderID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Orders-Boxes` (
  `orderId` varchar(100) NOT NULL,
  `boxId` varchar(100) NOT NULL,
  `box_color` varchar(10) NOT NULL,
  `sizeMax` int NOT NULL,
  `weight` double NOT NULL,
  `boxPicture` varchar(100) NOT NULL,
  `sellPrice` double NOT NULL,
  `shipping` double NOT NULL,
  `discount_value` double DEFAULT NULL,
  `setDate` datetime NOT NULL,
  PRIMARY KEY (`orderId`,`boxId`),
  KEY `orderId` (`orderId`),
  KEY `boxId` (`boxId`),
  CONSTRAINT `fk_orderId.Orders-Box-FROM-Orders` FOREIGN KEY (`orderId`) REFERENCES `Orders` (`orderID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Orders-BoxProducts` (
  `boxId` varchar(100) NOT NULL,
  `prodId` varchar(100) NOT NULL,
  `sequenceID` varchar(100) NOT NULL,
  `product_type` varchar(50) NOT NULL,
  `realSize` varchar(100) NOT NULL,
  `weight` double NOT NULL,
  `size_name` varchar(100) DEFAULT NULL,
  `brand_name` varchar(100) DEFAULT NULL,
  `measureId` varchar(100) DEFAULT NULL,
  `cut_name` varchar(30) DEFAULT NULL,
  `quantity` int NOT NULL,
  `setDate` datetime NOT NULL,
  `stillStock` tinyint(1) NOT NULL,
  PRIMARY KEY (`boxId`,`prodId`,`sequenceID`) USING BTREE,
  KEY `fk_prodId.Orders-BoxProducts-FROM-Products` (`prodId`),
  KEY `fk_brand_name.Orders-BoxProducts-FROM-BrandsMeasures` (`brand_name`),
  KEY `fk_cut_name.Orders-BoxProducts-FROM-Cuts` (`cut_name`),
  KEY `fk_measureId.Orders-BoxProducts-FROM-Orders-UsersMeasures` (`measureId`),
  KEY `fl_realSize.Orders-BoxProducts-FROM-Sizes` (`realSize`),
  CONSTRAINT `fk_boxId.Orders-BoxProducts-FROM-Orders-Box` FOREIGN KEY (`boxId`) REFERENCES `Orders-Boxes` (`boxId`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_brand_name.Orders-BoxProducts-FROM-BrandsMeasures` FOREIGN KEY (`brand_name`) REFERENCES `BrandsMeasures` (`brandName`) ON UPDATE CASCADE,
  CONSTRAINT `fk_cut_name.Orders-BoxProducts-FROM-Cuts` FOREIGN KEY (`cut_name`) REFERENCES `Cuts` (`cutName`) ON UPDATE CASCADE,
  CONSTRAINT `fk_measureId.Orders-BoxProducts-FROM-Orders-UsersMeasures` FOREIGN KEY (`measureId`) REFERENCES `Orders-UsersMeasures` (`measureID`),
  CONSTRAINT `fk_prodId.Orders-BoxProducts-FROM-Products` FOREIGN KEY (`prodId`) REFERENCES `Products` (`prodID`) ON UPDATE CASCADE,
  CONSTRAINT `fl_realSize.Orders-BoxProducts-FROM-Sizes` FOREIGN KEY (`realSize`) REFERENCES `Sizes` (`sizeName`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Orders-DiscountCodes` (
  `orderId` varchar(100) NOT NULL,
  `discount_code` varchar(50) NOT NULL,
  `discount_type` varchar(50) NOT NULL,
  `rate` float NOT NULL,
  `maxAmount` float DEFAULT NULL,
  `minAmount` float NOT NULL,
  `nbUse` int DEFAULT NULL,
  `beginDate` datetime DEFAULT NULL,
  `endDate` datetime DEFAULT NULL,
  `isCombinable` tinyint(1) NOT NULL,
  PRIMARY KEY (`orderId`,`discount_code`),
  KEY `fk_discount_code.Orders-DiscountCodes-FROM-DiscountCodes` (`discount_code`),
  CONSTRAINT `fk_discount_code.Orders-DiscountCodes-FROM-DiscountCodes` FOREIGN KEY (`discount_code`) REFERENCES `DiscountCodes` (`discountCode`) ON UPDATE CASCADE,
  CONSTRAINT `fk_orderId.Orders-DiscountCodes-FROM-Orders` FOREIGN KEY (`orderId`) REFERENCES `Orders` (`orderID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Orders-UsersMeasures` (
  `orderId` varchar(100) NOT NULL,
  `measureID` varchar(100) NOT NULL,
  `measureName` varchar(25) NOT NULL,
  `bust` float NOT NULL,
  `arm` float NOT NULL,
  `waist` float NOT NULL,
  `hip` float NOT NULL,
  `inseam` float NOT NULL,
  `unit_name` varchar(50) NOT NULL,
  `setDate` datetime NOT NULL,
  PRIMARY KEY (`orderId`,`measureID`),
  KEY `fk_unit_name.Orders-UsersMeasures-FROM-MeasureUnits` (`unit_name`),
  KEY `measureID` (`measureID`),
  CONSTRAINT `fk_orderId.Orders-UsersMeasures-FROM-Orders-Boxes` FOREIGN KEY (`orderId`) REFERENCES `Orders-Boxes` (`orderId`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_unit_name.Orders-UsersMeasures-FROM-MeasureUnits` FOREIGN KEY (`unit_name`) REFERENCES `MeasureUnits` (`unitName`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `OrdersStatus` (
  `orderId` varchar(100) NOT NULL,
  `status` varchar(50) NOT NULL,
  `trackingNumber` varchar(100) DEFAULT NULL,
  `adminId` varchar(50) NOT NULL,
  `deliveryMin` date DEFAULT NULL,
  `deliveryMax` date DEFAULT NULL,
  `setDate` datetime NOT NULL,
  PRIMARY KEY (`orderId`,`status`) USING BTREE,
  KEY `fk_adminId.OrdersStatus-FROM-Users` (`adminId`),
  CONSTRAINT `fk_adminId.OrdersStatus-FROM-Users` FOREIGN KEY (`adminId`) REFERENCES `Users-Privileges` (`userId`) ON UPDATE CASCADE,
  CONSTRAINT `fk_orderId.OrdersStatus-FROM-Orders` FOREIGN KEY (`orderId`) REFERENCES `Orders` (`orderID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Payements` (
  `payID` varchar(50) NOT NULL,
  `payMethod` varchar(50) NOT NULL,
  `company_` varchar(50) NOT NULL,
  `cancelPath` varchar(100) NOT NULL,
  `successPath` varchar(100) NOT NULL,
  PRIMARY KEY (`payID`) USING BTREE,
  KEY `fk_company_.Payements-FROM-Companies` (`company_`),
  CONSTRAINT `fk_company_.Payements-FROM-Companies` FOREIGN KEY (`company_`) REFERENCES `Companies` (`company`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Payements` (`payID`, `payMethod`, `company_`, `cancelPath`, `successPath`) VALUES
('alipay',	'alipay',	'stripe',	'checkout',	'checkout/success'),
('bancontact',	'bancontact',	'stripe',	'checkout',	'checkout/success'),
('card',	'card',	'stripe',	'checkout',	'checkout/success'),
('giropay',	'giropay',	'stripe',	'checkout',	'checkout/success'),
('ideal',	'ideal',	'stripe',	'checkout',	'checkout/success');

CREATE TABLE `Privileges` (
  `privID` varchar(50) NOT NULL,
  `description` text NOT NULL,
  PRIMARY KEY (`privID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Privileges` (`privID`, `description`) VALUES
('system',	'access to cron task');

CREATE TABLE `ProductFunctions` (
  `functionName` varchar(100) NOT NULL,
  PRIMARY KEY (`functionName`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `ProductFunctions` (`functionName`) VALUES
('accessories'),
('clothes');

CREATE TABLE `Products` (
  `prodID` varchar(100) NOT NULL,
  `isAvailable` tinyint(1) NOT NULL,
  `groupID` varchar(50) NOT NULL,
  `product_type` varchar(50) NOT NULL,
  `addedDate` datetime NOT NULL,
  `colorName` enum('red','gold','purple','pink','blue','green','white','black','beige','grey','brown','yellow','orange') NOT NULL,
  `colorRGB` varchar(50) NOT NULL,
  `weight` double NOT NULL,
  `prodRate` float NOT NULL,
  PRIMARY KEY (`prodID`),
  KEY `fk_product_type.Products-FROM-ProductsTypes` (`product_type`),
  CONSTRAINT `fk_product_type.Products-FROM-ProductsTypes` FOREIGN KEY (`product_type`) REFERENCES `ProductsTypes` (`productType`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Products` (`prodID`, `isAvailable`, `groupID`, `product_type`, `addedDate`, `colorName`, `colorRGB`, `weight`, `prodRate`) VALUES
('10',	0,	'a9',	'boxproduct',	'2020-12-13 07:04:50',	'beige',	'#d4c4c2',	0.14,	0),
('107',	1,	'a102',	'boxproduct',	'2020-12-13 07:04:50',	'black',	'#000000',	0.315,	5),
('109',	1,	'a104',	'boxproduct',	'2020-12-13 07:04:50',	'pink',	'#aa6263',	0.175,	3),
('111',	1,	'a106',	'boxproduct',	'2020-12-13 07:04:50',	'black',	'#000000',	0.3,	3),
('112',	1,	'a107',	'boxproduct',	'2020-12-13 07:04:50',	'black',	'#000000',	0.155,	3),
('113',	1,	'a108',	'boxproduct',	'2020-12-13 07:04:50',	'grey',	'#585c66',	0.095,	4),
('114',	1,	'a109',	'boxproduct',	'2020-12-13 07:04:50',	'pink',	'#cb97a3',	0.1,	4),
('129',	1,	'a122',	'boxproduct',	'2020-12-13 07:04:50',	'black',	'#000000',	0.1,	5),
('134',	1,	'a126',	'boxproduct',	'2020-12-13 07:04:50',	'brown',	'#b26c2f',	0.27,	4),
('14',	0,	'a13',	'boxproduct',	'2020-12-13 07:04:50',	'green',	'#4e5b54',	0.205,	0),
('27',	1,	'a25',	'boxproduct',	'2020-12-13 07:04:50',	'pink',	'#c80049',	0.325,	4),
('28',	1,	'a26',	'boxproduct',	'2020-12-13 07:04:50',	'blue',	'#1b1f41',	0.405,	5),
('3',	1,	'a3',	'boxproduct',	'2020-12-13 07:04:50',	'blue',	'#2f65cd',	0.195,	5),
('31',	1,	'a29',	'boxproduct',	'2020-12-13 07:04:50',	'purple',	'#3a4ec4',	0.12,	4),
('32',	1,	'a30',	'boxproduct',	'2020-12-13 07:04:50',	'grey',	'#4c5660',	0.245,	4),
('34',	1,	'a32',	'boxproduct',	'2020-12-13 07:04:50',	'purple',	'#8e8cbb',	0.26,	4),
('35',	1,	'a33',	'boxproduct',	'2020-12-13 07:04:50',	'blue',	'#0a2a60',	0.34,	4),
('36',	1,	'a34',	'boxproduct',	'2020-12-13 07:04:50',	'pink',	'#bd417e',	0.375,	4),
('38',	1,	'a36',	'boxproduct',	'2020-12-13 07:04:50',	'beige',	'#9ea089',	0.145,	3),
('39',	0,	'a37',	'boxproduct',	'2020-12-13 07:04:50',	'pink',	'#bd0040',	0.175,	0),
('45',	1,	'a43',	'boxproduct',	'2020-12-13 07:04:50',	'brown',	'#33252b',	0.39,	5),
('51',	1,	'a49',	'boxproduct',	'2020-12-13 07:04:50',	'pink',	'#bf0050',	0.395,	5),
('52',	1,	'a50',	'boxproduct',	'2020-12-13 07:04:50',	'black',	'#000000',	0.11,	3),
('57',	1,	'a54',	'boxproduct',	'2020-12-13 07:04:50',	'black',	'#000000',	0.375,	4),
('6',	1,	'a6',	'boxproduct',	'2020-12-13 07:04:50',	'purple',	'#3e1a61',	0.33,	5),
('61',	0,	'a57',	'boxproduct',	'2020-12-13 07:04:50',	'pink',	'#b38e82',	0.115,	0),
('66',	1,	'a62',	'boxproduct',	'2020-12-13 07:04:50',	'beige',	'#aeb1a0',	0.23,	0),
('68',	1,	'a64',	'boxproduct',	'2020-12-13 07:04:50',	'blue',	'#011857',	0.25,	4),
('7',	1,	'a7',	'boxproduct',	'2020-12-13 07:04:50',	'pink',	'#b6175e',	0.15,	5),
('73',	1,	'a69',	'boxproduct',	'2020-12-13 07:04:50',	'red',	'#d5002b',	0.135,	4),
('83',	1,	'a79',	'boxproduct',	'2020-12-13 07:04:50',	'blue',	'#191f30',	0.255,	3),
('85',	1,	'a81',	'boxproduct',	'2020-12-13 07:04:50',	'white',	'#ffffff',	0.26,	3),
('92',	1,	'a88',	'boxproduct',	'2020-12-13 07:04:50',	'blue',	'#58809b',	0.15,	5),
('95',	1,	'a91',	'boxproduct',	'2020-12-13 07:04:50',	'blue',	'#2f5d98',	0.57,	4);

CREATE TABLE `Products-Categories` (
  `prodId` varchar(100) NOT NULL,
  `category_name` varchar(100) NOT NULL,
  PRIMARY KEY (`prodId`,`category_name`),
  KEY `fk_category_name.Products-Categories-FROM-Categories` (`category_name`),
  CONSTRAINT `fk_category_name.Products-Categories-FROM-Categories` FOREIGN KEY (`category_name`) REFERENCES `Categories` (`categoryName`) ON UPDATE CASCADE,
  CONSTRAINT `fk_prodId.Products-Categories-FROM-Products` FOREIGN KEY (`prodId`) REFERENCES `Products` (`prodID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Products-Categories` (`prodId`, `category_name`) VALUES
('109',	'dress'),
('111',	'dress'),
('112',	'dress'),
('113',	'dress'),
('114',	'dress'),
('3',	'dress'),
('32',	'dress'),
('34',	'dress'),
('35',	'dress'),
('36',	'dress'),
('45',	'dress'),
('6',	'dress'),
('95',	'jeans'),
('83',	'pant suits'),
('92',	'shorts'),
('68',	'skirt'),
('85',	'skirt'),
('66',	'skirt suits'),
('73',	'skirt suits'),
('134',	'sweater'),
('51',	'sweater'),
('57',	'sweater'),
('10',	't-shirt'),
('14',	't-shirt'),
('31',	't-shirt'),
('38',	't-shirt'),
('39',	't-shirt'),
('61',	't-shirt'),
('129',	'top'),
('27',	'top'),
('52',	'top'),
('7',	'top'),
('107',	'vest'),
('28',	'vest');

CREATE TABLE `Products-Collections` (
  `prodId` varchar(100) NOT NULL,
  `collection_name` varchar(100) NOT NULL,
  `beginDate` datetime DEFAULT NULL,
  `endDate` datetime DEFAULT NULL,
  PRIMARY KEY (`prodId`,`collection_name`),
  KEY `fk_collection_name.Products-Collections-FROM-Collections` (`collection_name`),
  CONSTRAINT `fk_collection_name.Products-Collections-FROM-Collections` FOREIGN KEY (`collection_name`) REFERENCES `Collections` (`collectionName`) ON UPDATE CASCADE,
  CONSTRAINT `fk_prodId.Products-Collections-FROM-Products` FOREIGN KEY (`prodId`) REFERENCES `Products` (`prodID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Products-Collections` (`prodId`, `collection_name`, `beginDate`, `endDate`) VALUES
('10',	'drop1',	NULL,	NULL),
('10',	'women',	NULL,	NULL),
('107',	'drop1',	NULL,	NULL),
('107',	'women',	NULL,	NULL),
('109',	'drop1',	NULL,	NULL),
('109',	'women',	NULL,	NULL),
('111',	'drop1',	NULL,	NULL),
('111',	'women',	NULL,	NULL),
('112',	'drop1',	NULL,	NULL),
('112',	'women',	NULL,	NULL),
('113',	'drop1',	NULL,	NULL),
('113',	'women',	NULL,	NULL),
('114',	'drop1',	NULL,	NULL),
('114',	'women',	NULL,	NULL),
('129',	'drop1',	NULL,	NULL),
('129',	'women',	NULL,	NULL),
('134',	'drop1',	NULL,	NULL),
('134',	'women',	NULL,	NULL),
('14',	'drop1',	NULL,	NULL),
('14',	'women',	NULL,	NULL),
('27',	'drop1',	NULL,	NULL),
('27',	'women',	NULL,	NULL),
('28',	'drop1',	NULL,	NULL),
('28',	'women',	NULL,	NULL),
('3',	'drop1',	NULL,	NULL),
('3',	'women',	NULL,	NULL),
('31',	'drop1',	NULL,	NULL),
('31',	'women',	NULL,	NULL),
('32',	'drop1',	NULL,	NULL),
('32',	'women',	NULL,	NULL),
('34',	'drop1',	NULL,	NULL),
('34',	'women',	NULL,	NULL),
('35',	'drop1',	NULL,	NULL),
('35',	'women',	NULL,	NULL),
('36',	'drop1',	NULL,	NULL),
('36',	'women',	NULL,	NULL),
('38',	'drop1',	NULL,	NULL),
('38',	'women',	NULL,	NULL),
('39',	'drop1',	NULL,	NULL),
('39',	'women',	NULL,	NULL),
('45',	'drop1',	NULL,	NULL),
('45',	'women',	NULL,	NULL),
('51',	'drop1',	NULL,	NULL),
('51',	'women',	NULL,	NULL),
('52',	'drop1',	NULL,	NULL),
('52',	'women',	NULL,	NULL),
('57',	'drop1',	NULL,	NULL),
('57',	'women',	NULL,	NULL),
('6',	'drop1',	NULL,	NULL),
('6',	'women',	NULL,	NULL),
('61',	'drop1',	NULL,	NULL),
('61',	'women',	NULL,	NULL),
('66',	'drop1',	NULL,	NULL),
('66',	'women',	NULL,	NULL),
('68',	'drop1',	NULL,	NULL),
('68',	'women',	NULL,	NULL),
('7',	'drop1',	NULL,	NULL),
('7',	'women',	NULL,	NULL),
('73',	'drop1',	NULL,	NULL),
('73',	'women',	NULL,	NULL),
('83',	'drop1',	NULL,	NULL),
('83',	'women',	NULL,	NULL),
('85',	'drop1',	NULL,	NULL),
('85',	'women',	NULL,	NULL),
('92',	'drop1',	NULL,	NULL),
('92',	'women',	NULL,	NULL),
('95',	'drop1',	NULL,	NULL),
('95',	'women',	NULL,	NULL);

CREATE TABLE `Products-ProductFunctions` (
  `prodId` varchar(100) NOT NULL,
  `function_name` varchar(100) NOT NULL,
  PRIMARY KEY (`prodId`,`function_name`),
  KEY `fk_function_name.Products-ProductFunctions-FROM-ProductFunctions` (`function_name`),
  CONSTRAINT `fk_function_name.Products-ProductFunctions-FROM-ProductFunctions` FOREIGN KEY (`function_name`) REFERENCES `ProductFunctions` (`functionName`) ON UPDATE CASCADE,
  CONSTRAINT `fk_prodId.Products-ProductFunctions-FROM-Products` FOREIGN KEY (`prodId`) REFERENCES `Products` (`prodID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Products-ProductFunctions` (`prodId`, `function_name`) VALUES
('10',	'clothes'),
('107',	'clothes'),
('109',	'clothes'),
('111',	'clothes'),
('112',	'clothes'),
('113',	'clothes'),
('114',	'clothes'),
('129',	'clothes'),
('134',	'clothes'),
('14',	'clothes'),
('27',	'clothes'),
('28',	'clothes'),
('3',	'clothes'),
('31',	'clothes'),
('32',	'clothes'),
('34',	'clothes'),
('35',	'clothes'),
('36',	'clothes'),
('38',	'clothes'),
('39',	'clothes'),
('45',	'clothes'),
('51',	'clothes'),
('52',	'clothes'),
('57',	'clothes'),
('6',	'clothes'),
('61',	'clothes'),
('66',	'clothes'),
('68',	'clothes'),
('7',	'clothes'),
('73',	'clothes'),
('83',	'clothes'),
('85',	'clothes'),
('92',	'clothes'),
('95',	'clothes');

CREATE TABLE `Products-Sizes` (
  `prodId` varchar(100) NOT NULL,
  `size_name` varchar(100) NOT NULL,
  `stock` int NOT NULL,
  PRIMARY KEY (`prodId`,`size_name`),
  KEY `fk_size_name.Products-Sizes-FROM-Products` (`size_name`),
  CONSTRAINT `fk_prodId.Products-Sizes-FROM-Products` FOREIGN KEY (`prodId`) REFERENCES `Products` (`prodID`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `fk_size_name.Products-Sizes-FROM-Products` FOREIGN KEY (`size_name`) REFERENCES `Sizes` (`sizeName`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Products-Sizes` (`prodId`, `size_name`, `stock`) VALUES
('10',	'xs',	1),
('107',	'l',	1),
('109',	's',	1),
('111',	's',	1),
('112',	's',	1),
('113',	's',	1),
('114',	's',	1),
('129',	's',	1),
('134',	'm',	1),
('14',	'l',	1),
('27',	's',	1),
('28',	'xl',	1),
('3',	'm',	1),
('31',	'xl',	1),
('32',	'm',	1),
('34',	'l',	1),
('35',	'm',	1),
('36',	'm',	1),
('38',	'm',	1),
('39',	'xl',	1),
('45',	'xxl',	1),
('51',	'xs',	1),
('52',	's',	1),
('57',	'l',	1),
('6',	's',	1),
('61',	's',	1),
('66',	'm',	1),
('68',	'xs',	1),
('7',	'm',	1),
('73',	'm',	1),
('83',	'38',	1),
('85',	'm',	1),
('92',	'40',	1),
('95',	'46',	1);

CREATE TABLE `ProductsDescriptions` (
  `prodId` varchar(100) NOT NULL,
  `lang_` varchar(10) NOT NULL,
  `description` varchar(5000) NOT NULL,
  `richDescription` varchar(5000) NOT NULL,
  PRIMARY KEY (`prodId`,`lang_`),
  KEY `FK_lang_.ProductsDescriptions-FROM-Languages` (`lang_`),
  CONSTRAINT `FK_lang_.ProductsDescriptions-FROM-Languages` FOREIGN KEY (`lang_`) REFERENCES `Languages` (`langIsoCode`) ON UPDATE CASCADE,
  CONSTRAINT `FK_prodId.ProductsDescriptions-FROM-Products` FOREIGN KEY (`prodId`) REFERENCES `Products` (`prodID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `ProductsDescriptions` (`prodId`, `lang_`, `description`, `richDescription`) VALUES
('10',	'en',	'Soft top with round neckline. Model featuring short sleeves with decorative bows and buttons at the top.',	'Soft top with round neckline. Model featuring short sleeves with decorative bows and buttons at the top.'),
('10',	'fr',	'Haut doux avec encolure ronde. Modèle disposant de manches courtes avec des nœuds décoratifs et des boutons sur le haut.',	'Haut doux avec encolure ronde. Modèle disposant de manches courtes avec des nœuds décoratifs et des boutons sur le haut.'),
('107',	'en',	'Short faux fur cardigan. Front hook closure. Without sleeves',	'Short faux fur cardigan. Front hook closure. Without sleeves'),
('107',	'fr',	'Gilet court en fausse fourrure. Fermeture avant en crochet. Sans manches',	'Gilet court en fausse fourrure. Fermeture avant en crochet. Sans manches'),
('109',	'en',	'Velvet overalls dress. Model with shoulder straps with metal fasteners. Pocket at top front. Cut out at the waist and A-line skirt with zipper on one side. Unlined.',	'Velvet overalls dress. Model with shoulder straps with metal fasteners. Pocket at top front. Cut out at the waist and A-line skirt with zipper on one side. Unlined.'),
('109',	'fr',	'Robe salopette en velours. Modèle avec bretelles munies d’attaches en métal. Poche en haut à l’avant. Découpe à la taille et jupe trapèze avec fermeture à glissière sur un côté. Non doublée.',	'Robe salopette en velours. Modèle avec bretelles munies d’attaches en métal. Poche en haut à l’avant. Découpe à la taille et jupe trapèze avec fermeture à glissière sur un côté. Non doublée.'),
('111',	'en',	'Long faux leather dress. Strapless model. Zipper at the back. Removable and adjustable belt at the waist.',	'Long faux leather dress. Strapless model. Zipper at the back. Removable and adjustable belt at the waist.'),
('111',	'fr',	'Robe longue en faux cuir. Modèle sans bretelles. Fermeture à glissière à l’arrière. Ceinture amovible et réglable à la taille.',	'Robe longue en faux cuir. Modèle sans bretelles. Fermeture à glissière à l’arrière. Ceinture amovible et réglable à la taille.'),
('112',	'en',	'Long and fitted dress. Soft, slightly shiny fabric. Square neckline at the front and v-neckline at the back. Model with thin straps.',	'Long and fitted dress. Soft, slightly shiny fabric. Square neckline at the front and v-neckline at the back. Model with thin straps.'),
('112',	'fr',	'Robe longue et ajustée. Tissu doux légèrement brillant. Encolure en carré à l’avant et en v à l\'arrière. Modèle à bretelles fines.',	'Robe longue et ajustée. Tissu doux légèrement brillant. Encolure en carré à l’avant et en v à l\'arrière. Modèle à bretelles fines.'),
('113',	'en',	'Short, fitted dress. Animal print fabric. Square neckline at the front. Model with thin straps, crossing the back in crossed lacing.',	'Short, fitted dress. Animal print fabric. Square neckline at the front. Model with thin straps, crossing the back in crossed lacing.'),
('113',	'fr',	'Robe courte et ajustée. Tissu à motif animalier. Encolure carrée à l’avant. Modèle à fines bretelles, traversant le dos en laçage croisé.  ',	'Robe courte et ajustée. Tissu à motif animalier. Encolure carrée à l’avant. Modèle à fines bretelles, traversant le dos en laçage croisé.  '),
('114',	'en',	'Short straight dress with collar. Slightly transparent fluid fabric model with short sleeves. Zipper in the back.',	'Short straight dress with collar. Slightly transparent fluid fabric model with short sleeves. Zipper in the back.'),
('114',	'fr',	'Robe courte droite à col. Modèle à tissus fluide légèrement transparent avec manches courtes. Fermeture à glissière dans le dos.',	'Robe courte droite à col. Modèle à tissus fluide légèrement transparent avec manches courtes. Fermeture à glissière dans le dos.'),
('129',	'en',	'Solid color top. Features a turtleneck and long sleeves. Transparent and fluid fabric.',	'Solid color top. Features a turtleneck and long sleeves. Transparent and fluid fabric.'),
('129',	'fr',	'Haut à couleur unie. Dispose d’un col roulé et des manches longues. Tissu transparent et fluide.',	'Haut à couleur unie. Dispose d’un col roulé et des manches longues. Tissu transparent et fluide.'),
('134',	'en',	'Soft thick knit sweater. Featuring a ribbed knit finish at the neckline, the bottom and long sleeves.',	'Soft thick knit sweater. Featuring a ribbed knit finish at the neckline, the bottom and long sleeves.'),
('134',	'fr',	'Pull en douce maille épaisse. Modèle avec finition en maille côtelée à l\'encolure, à la base et des manches longues.',	'Pull en douce maille épaisse. Modèle avec finition en maille côtelée à l\'encolure, à la base et des manches longues.'),
('14',	'en',	'Striped pattern top with round neckline and 3/4 sleeves.',	'Striped pattern top with round neckline and 3/4 sleeves.'),
('14',	'fr',	'Haut à motif rayé avec encolure ronde et manches 3/4. ',	'Haut à motif rayé avec encolure ronde et manches 3/4. '),
('27',	'en',	'Short puff-sleeved peplum top with epaulettes and button fastening at the end. Model with square neckline, front button fastening and thick stiff quilted fabric.',	'Short puff-sleeved peplum top with epaulettes and button fastening at the end. Model with square neckline, front button fastening and thick stiff quilted fabric.'),
('27',	'fr',	'Haut péplum à manches courtes bouffantes avec épaulettes et boutonnages sur la fin. Modèle avec encolure carrée, boutonnage avant et tissu matelassé épais et rigide.',	'Haut péplum à manches courtes bouffantes avec épaulettes et boutonnages sur la fin. Modèle avec encolure carrée, boutonnage avant et tissu matelassé épais et rigide.'),
('28',	'en',	'Oversized woven jacket. Model with a lapel collar and a button front. Real pockets on the sides and integrated shoulder pads.',	'Oversized woven jacket. Model with a lapel collar and a button front. Real pockets on the sides and integrated shoulder pads.'),
('28',	'fr',	'Veste oversize tissé. Modèle avec col à revers et un bouton à l’avant. Vrai poches sur les côtés et épaulettes intégrées.',	'Veste oversize tissé. Modèle avec col à revers et un bouton à l’avant. Vrai poches sur les côtés et épaulettes intégrées.'),
('3',	'en',	'Mid-calf length dress with braided decorations around the neckline. Model with short sleeves and elastic at the waist.',	'Mid-calf length dress with braided decorations around the neckline. Model with short sleeves and elastic at the waist.'),
('3',	'fr',	'Robe de longueur mi-mollet disposant de décorations tressées autour de l’encolure. Modèle avec manches courtes et élastique au niveau de la taille.',	'Robe de longueur mi-mollet disposant de décorations tressées autour de l’encolure. Modèle avec manches courtes et élastique au niveau de la taille.'),
('31',	'en',	'Top in satin-effect fabric with geometric print pattern. Detail of fake pocket with fabric handkerchief.',	'Top in satin-effect fabric with geometric print pattern. Detail of fake pocket with fabric handkerchief.'),
('31',	'fr',	'Haut en tissu à effet satiné avec motif imprimé géométrique. Détail de fausse poche avec mouchoir en tissu. ',	'Haut en tissu à effet satiné avec motif imprimé géométrique. Détail de fausse poche avec mouchoir en tissu. '),
('32',	'en',	'Straight dress with buttoning on the side. Rigid fabric with striped pattern. Pockets at the front. Model with sleeveless square neckline.',	'Straight dress with buttoning on the side. Rigid fabric with striped pattern. Pockets at the front. Model with sleeveless square neckline.'),
('32',	'fr',	'Robe droite avec boutonnage sur le côté. Tissu rigide à motif rayé. Poches à l’avant. Modèle avec encolure carrée sans manches.',	'Robe droite avec boutonnage sur le côté. Tissu rigide à motif rayé. Poches à l’avant. Modèle avec encolure carrée sans manches.'),
('34',	'en',	'Short dress with a double collar. Button fastening and front pockets. Short sleeves.',	'Short dress with a double collar. Button fastening and front pockets. Short sleeves.'),
('34',	'fr',	'Robe courte avec un double col. Boutonnage et poches à l’avant. Manches courtes.',	'Robe courte avec un double col. Boutonnage et poches à l’avant. Manches courtes.'),
('35',	'en',	'Short dress fitted at the waist with a buttoning at the front. V-neck surrounded by embroidery. Short sleeves with shoulder pads.',	'Short dress fitted at the waist with a buttoning at the front. V-neck surrounded by embroidery. Short sleeves with shoulder pads.'),
('35',	'fr',	'Robe courte ajusté au niveau de la taille avec un boutonnage à l’avant. Encolure en v entouré de broderie. Manches courtes avec épaulettes. ',	'Robe courte ajusté au niveau de la taille avec un boutonnage à l’avant. Encolure en v entouré de broderie. Manches courtes avec épaulettes. '),
('36',	'en',	'Long straight sleeveless dress. Square neckline. Airy and opaque fabric. Model with zipper at the back.',	'Long straight sleeveless dress. Square neckline. Airy and opaque fabric. Model with zipper at the back.'),
('36',	'fr',	'Robe longue droite sans manches. Encolure carrée. Tissu aérien et opaque. Modèle avec fermeture Éclair à l’arrière.   ',	'Robe longue droite sans manches. Encolure carrée. Tissu aérien et opaque. Modèle avec fermeture Éclair à l’arrière.   '),
('38',	'en',	'Top with lettering on the front. Features a round neckline and short sleeves.',	'Top with lettering on the front. Features a round neckline and short sleeves.'),
('38',	'fr',	'Haut avec inscription à l’avant. Dispose d’une encolure ronde et des manches courtes. ',	'Haut avec inscription à l’avant. Dispose d’une encolure ronde et des manches courtes. '),
('39',	'en',	'Striped pattern top with v-neck and long sleeves. Model with a small pocket at the front.',	'Striped pattern top with v-neck and long sleeves. Model with a small pocket at the front.'),
('39',	'fr',	'Haut à motif rayé avec encolure en v et manches longues. Modèle avec une petite poche à l’avant. ',	'Haut à motif rayé avec encolure en v et manches longues. Modèle avec une petite poche à l’avant. '),
('45',	'en',	'Short dress with collar. Buttoned at the front. 3/4 sleeves with shoulder pads. Satin effect fabric. With a decorative front cutout at the bottom.',	'Short dress with collar. Buttoned at the front. 3/4 sleeves with shoulder pads. Satin effect fabric. With a decorative front cutout at the bottom.'),
('45',	'fr',	'Robe courte avec col. Boutonnage à l’avant. Manches 3/4 avec épaulettes. Tissu à effet satiné. Disposants sur la face avant d’un découpage décoratif sur le bas.',	'Robe courte avec col. Boutonnage à l’avant. Manches 3/4 avec épaulettes. Tissu à effet satiné. Disposants sur la face avant d’un découpage décoratif sur le bas.'),
('51',	'en',	'Soft, fluffy knit sweater with long sleeves. Round neckline surrounded by a golden chain.',	'Soft, fluffy knit sweater with long sleeves. Round neckline surrounded by a golden chain.'),
('51',	'fr',	'Pull en maille douce et duveteux avec longues manches. Encolure ronde entourée d’une chaine de couleur dorée. ',	'Pull en maille douce et duveteux avec longues manches. Encolure ronde entourée d’une chaine de couleur dorée. '),
('52',	'en',	'Short-sleeved peplum top with round neckline. Discreet floral pattern fabric with a satin effect.',	'Short-sleeved peplum top with round neckline. Discreet floral pattern fabric with a satin effect.'),
('52',	'fr',	'Haut péplum à manches courtes avec encolure ronde. Tissu à motif floral discret avec un effet satiné. ',	'Haut péplum à manches courtes avec encolure ronde. Tissu à motif floral discret avec un effet satiné. '),
('57',	'en',	'Soft, fluffy knit sweater with long sleeves. Round neckline.',	'Soft, fluffy knit sweater with long sleeves. Round neckline.'),
('57',	'fr',	'Pull en maille douce et duveteux avec longues manches. Encolure ronde. ',	'Pull en maille douce et duveteux avec longues manches. Encolure ronde. '),
('6',	'en',	'Mid-calf length dress with shiny rhinestones with lining. Fitted model with square neckline at the front and at the back. Decorative ruffles at the end of the dress.',	'Mid-calf length dress with shiny rhinestones with lining. Fitted model with square neckline at the front and at the back. Decorative ruffles at the end of the dress.'),
('6',	'fr',	'Robe de longueur mi-mollet à strass très brillant avec doublure. Modèle ajusté avec encolure carrée devant et dans le dos. Volants décoratifs en fin de robe.',	'Robe de longueur mi-mollet à strass très brillant avec doublure. Modèle ajusté avec encolure carrée devant et dans le dos. Volants décoratifs en fin de robe.'),
('61',	'en',	'Top with design and lettering on the front. Features a round neckline and short sleeves.',	'Top with design and lettering on the front. Features a round neckline and short sleeves.'),
('61',	'fr',	'Haut avec dessin et inscription à l’avant. Dispose d’une encolure ronde et des manches courtes.',	'Haut avec dessin et inscription à l’avant. Dispose d’une encolure ronde et des manches courtes.'),
('66',	'en',	'Mid-length, fitted pencil skirt. High-waisted model with concealed zip fastening to the back.',	'Mid-length, fitted pencil skirt. High-waisted model with concealed zip fastening to the back.'),
('66',	'fr',	'Jupe crayon mi-longue et ajustée. Modèle taille haute avec fermeture à glissière dissimulée dans le dos.',	'Jupe crayon mi-longue et ajustée. Modèle taille haute avec fermeture à glissière dissimulée dans le dos.'),
('68',	'en',	'Mid-length flared skirt. High-waisted model with a slim removable belt and full-length front button fastening.',	'Mid-length flared skirt. High-waisted model with a slim removable belt and full-length front button fastening.'),
('68',	'fr',	'Jupe évasée mi-longue. Modèle taille haute avec fine ceinture amovible et boutonnage avant sur toute la longueur. ',	'Jupe évasée mi-longue. Modèle taille haute avec fine ceinture amovible et boutonnage avant sur toute la longueur. '),
('7',	'en',	'Square neckline crop top with stiff fabric. Model with a button front and short sleeves.',	'Square neckline crop top with stiff fabric. Model with a button front and short sleeves.'),
('7',	'fr',	'Haut court à encolure carrée avec un tissu rigide. Modèle disposant d’un boutonnage à l\'avant et des manches courtes.',	'Haut court à encolure carrée avec un tissu rigide. Modèle disposant d’un boutonnage à l\'avant et des manches courtes.'),
('73',	'en',	'Mid-length, fitted pencil skirt. High-waisted model with concealed zip fastening to the back.',	'Mid-length, fitted pencil skirt. High-waisted model with concealed zip fastening to the back.'),
('73',	'fr',	'Jupe crayon mi-longue et ajustée. Modèle taille haute avec fermeture à glissière dissimulée dans le dos.',	'Jupe crayon mi-longue et ajustée. Modèle taille haute avec fermeture à glissière dissimulée dans le dos.'),
('83',	'en',	'Mid-calf length cigarette pants. Fabric with a slightly satin effect. Front pockets. Front zipper topped with two buttons.',	'Mid-calf length cigarette pants. Fabric with a slightly satin effect. Front pockets. Front zipper topped with two buttons.'),
('83',	'fr',	'Pantalon cigarette longueur mi-mollet. Tissu à effet légèrement satiné. Poches avant. Fermeture Éclair avant surmonté de deux boutons.       ',	'Pantalon cigarette longueur mi-mollet. Tissu à effet légèrement satiné. Poches avant. Fermeture Éclair avant surmonté de deux boutons.       '),
('85',	'en',	'Pencil skirt in jeans. Front zipper topped with a button. Front and back pockets.',	'Pencil skirt in jeans. Front zipper topped with a button. Front and back pockets.'),
('85',	'fr',	'Jupe crayon en jeans. Fermeture Éclair avant surmonté d’un bouton. Poches avant et arrière.           ',	'Jupe crayon en jeans. Fermeture Éclair avant surmonté d’un bouton. Poches avant et arrière.           '),
('92',	'en',	'Woven shorts. High waist model with pleats lying in front. Zip fly. Slanted side pockets. Belt loop.',	'Woven shorts. High waist model with pleats lying in front. Zip fly. Slanted side pockets. Belt loop.'),
('92',	'fr',	'Short tissé. Modèle taille haute avec plis couchés devant. Braguette zippée. Poches latérales obliques. Passant à ceinture.          ',	'Short tissé. Modèle taille haute avec plis couchés devant. Braguette zippée. Poches latérales obliques. Passant à ceinture.          '),
('95',	'en',	'Straight jeans slightly faded at the front. High waist model. Zipper topped with a button and front pockets. Belt loop.',	'Straight jeans slightly faded at the front. High waist model. Zipper topped with a button and front pockets. Belt loop.'),
('95',	'fr',	'Jeans droit légèrement délavé à l\'avant. Modèle taille haute. Fermeture Éclair surmontée d’un bouton et poches avant. Passant à ceinture.          ',	'Jeans droit légèrement délavé à l\'avant. Modèle taille haute. Fermeture Éclair surmontée d’un bouton et poches avant. Passant à ceinture.          ');

CREATE TABLE `ProductsDiscounts` (
  `prodId` varchar(100) NOT NULL,
  `country_` varchar(100) NOT NULL,
  `discount_value` double NOT NULL,
  `beginDate` datetime DEFAULT NULL,
  `endDate` datetime DEFAULT NULL,
  PRIMARY KEY (`prodId`,`country_`),
  KEY `fk_country_.ProductsDiscounts-FROM-Countries` (`country_`),
  KEY `fk_discount_value.ProductsDiscounts-FROM-DiscountValues` (`discount_value`),
  CONSTRAINT `fk_country_.ProductsDiscounts-FROM-Countries` FOREIGN KEY (`country_`) REFERENCES `Countries` (`country`) ON UPDATE CASCADE,
  CONSTRAINT `fk_discount_value.ProductsDiscounts-FROM-DiscountValues` FOREIGN KEY (`discount_value`) REFERENCES `DiscountValues` (`discountValue`) ON UPDATE CASCADE,
  CONSTRAINT `fk_prodId.ProductsDiscounts-FROM-Products` FOREIGN KEY (`prodId`) REFERENCES `Products` (`prodID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `ProductsNames` (
  `prodId` varchar(100) NOT NULL,
  `lang_` varchar(10) NOT NULL,
  `prodName` varchar(100) NOT NULL,
  PRIMARY KEY (`prodId`,`lang_`),
  KEY `fk-lang_.ProductsNames-FROM-Products` (`lang_`),
  CONSTRAINT `fk-lang_.ProductsNames-FROM-Products` FOREIGN KEY (`lang_`) REFERENCES `Languages` (`langIsoCode`) ON UPDATE CASCADE,
  CONSTRAINT `fk-prodId.ProductsNames-FROM-Products` FOREIGN KEY (`prodId`) REFERENCES `Products` (`prodID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `ProductsNames` (`prodId`, `lang_`, `prodName`) VALUES
('10',	'en',	'top with sleeves decorated with bows and buttons on the top'),
('10',	'fr',	'haut à manches décorées de nœuds et boutons sur le haut'),
('107',	'en',	'faux fur vest'),
('107',	'fr',	'gilet en fausse fourrure '),
('109',	'en',	'velvet overalls dress'),
('109',	'fr',	'robe salopette en velours'),
('111',	'en',	'faux leather dress'),
('111',	'fr',	'robe en faux cuir'),
('112',	'en',	'dress with slightly shiny fabric'),
('112',	'fr',	'robe avec tissu légèrement brillant '),
('113',	'en',	'dress with lacing at the back'),
('113',	'fr',	'robe avec laçage dans le dos'),
('114',	'en',	'slightly transparent dress'),
('114',	'fr',	'robe légèrement transparente'),
('129',	'en',	'see through top'),
('129',	'fr',	'haut transparent'),
('134',	'en',	'soft thick knit sweater'),
('134',	'fr',	'pull en douce maille épaisse'),
('14',	'en',	'striped pattern top'),
('14',	'fr',	'haut à motif rayé '),
('27',	'en',	'peplum top with puff sleeves'),
('27',	'fr',	'haut péplum à manches bouffantes'),
('28',	'en',	'oversized jacket with integrated shoulder pads'),
('28',	'fr',	'veste oversize à épaulettes intégrées'),
('3',	'en',	'dress with braided decoration'),
('3',	'fr',	'robe avec décoration tressée'),
('31',	'en',	'geometric print top'),
('31',	'fr',	'haut à imprimé géométrique'),
('32',	'en',	'striped pattern dress'),
('32',	'fr',	'robe à motif rayé'),
('34',	'en',	'dress with a double collar'),
('34',	'fr',	'robe avec un double col'),
('35',	'en',	'dress decorated with embroidery'),
('35',	'fr',	'robe décorée de broderies '),
('36',	'en',	' sleeveless maxi dress'),
('36',	'fr',	'robe maxi longue sans manche'),
('38',	'en',	'top with lettering on the front'),
('38',	'fr',	'haut avec inscription à l’avant'),
('39',	'en',	'striped top with a small pocket'),
('39',	'fr',	'haut rayé avec une petite poche'),
('45',	'en',	'dress with decorative cutout'),
('45',	'fr',	'robe avec découpage décoratif'),
('51',	'en',	'sweater with golden chain'),
('51',	'fr',	'pull avec chaine de couleur dorée'),
('52',	'en',	'peplum top with floral pattern'),
('52',	'fr',	'haut péplum à motif floral'),
('57',	'en',	'soft and fluffy knit sweater'),
('57',	'fr',	'pull en maille douce et duveteux'),
('6',	'en',	'very shiny rhinestone dress with lining'),
('6',	'fr',	'robe à strass très brillant avec doublure'),
('61',	'en',	'top with inscriptions and designs'),
('61',	'fr',	'haut avec inscriptions et dessins '),
('66',	'en',	'mid-length pencil skirt'),
('66',	'fr',	'jupe crayon mi-longue'),
('68',	'en',	'flared patterned skirt with belt included'),
('68',	'fr',	'jupe évasée à motif avec ceinture inclus'),
('7',	'en',	'square neck crop top'),
('7',	'fr',	'haut court à encolure carrée'),
('73',	'en',	'mid-length, fitted pencil skirt'),
('73',	'fr',	'jupe crayon mi-longue et ajustée'),
('83',	'en',	'mid-calf length cigarette pants'),
('83',	'fr',	'pantalon cigarette longueur mi-mollet'),
('85',	'en',	'denim pencil skirt'),
('85',	'fr',	'jupe crayon en jeans'),
('92',	'en',	'high waist shorts'),
('92',	'fr',	'short taille haute '),
('95',	'en',	'lightly washed straight jeans'),
('95',	'fr',	'jeans droit légèrement délavé ');

CREATE TABLE `ProductsPictures` (
  `prodId` varchar(100) NOT NULL,
  `pictureID` int NOT NULL,
  `picture` varchar(100) NOT NULL,
  PRIMARY KEY (`prodId`,`pictureID`),
  CONSTRAINT `fk_prodId.Products-Pictures-FROM-Products` FOREIGN KEY (`prodId`) REFERENCES `Products` (`prodID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `ProductsPictures` (`prodId`, `pictureID`, `picture`) VALUES
('10',	0,	'clothe10-0.jpg'),
('10',	1,	'clothe10-1.jpg'),
('10',	2,	'clothe10-2.jpg'),
('10',	3,	'clothe10-3.jpg'),
('107',	0,	'clothe107-0.jpg'),
('107',	1,	'clothe107-1.jpg'),
('107',	2,	'clothe107-2.jpg'),
('107',	3,	'clothe107-3.jpg'),
('109',	0,	'clothe109-0.jpg'),
('109',	1,	'clothe109-1.jpg'),
('109',	2,	'clothe109-2.jpg'),
('109',	3,	'clothe109-3.jpg'),
('111',	0,	'clothe111-0.jpg'),
('111',	1,	'clothe111-1.jpg'),
('111',	2,	'clothe111-2.jpg'),
('111',	3,	'clothe111-3.jpg'),
('112',	0,	'clothe112-0.jpg'),
('112',	1,	'clothe112-1.jpg'),
('112',	2,	'clothe112-2.jpg'),
('112',	3,	'clothe112-3.jpg'),
('113',	0,	'clothe113-0.jpg'),
('113',	1,	'clothe113-1.jpg'),
('113',	2,	'clothe113-2.jpg'),
('113',	3,	'clothe113-3.jpg'),
('114',	0,	'clothe114-0.jpg'),
('114',	1,	'clothe114-1.jpg'),
('114',	2,	'clothe114-2.jpg'),
('114',	3,	'clothe114-3.jpg'),
('129',	0,	'clothe129-0.jpg'),
('129',	1,	'clothe129-1.jpg'),
('129',	2,	'clothe129-2.jpg'),
('129',	3,	'clothe129-3.jpg'),
('134',	0,	'clothe134-0.jpg'),
('134',	1,	'clothe134-1.jpg'),
('134',	2,	'clothe134-2.jpg'),
('134',	3,	'clothe134-3.jpg'),
('14',	0,	'clothe14-0.jpg'),
('14',	1,	'clothe14-1.jpg'),
('14',	2,	'clothe14-2.jpg'),
('14',	3,	'clothe14-3.jpg'),
('27',	0,	'clothe27-1.jpg'),
('27',	1,	'clothe27-4.jpg'),
('27',	2,	'clothe27-2.jpg'),
('27',	3,	'clothe27-3.jpg'),
('27',	4,	'clothe27-0.jpg'),
('28',	0,	'clothe28-0.jpg'),
('28',	1,	'clothe28-1.jpg'),
('28',	2,	'clothe28-2.jpg'),
('28',	3,	'clothe28-3.jpg'),
('3',	0,	'clothe3-0.jpg'),
('3',	1,	'clothe3-1.jpg'),
('3',	2,	'clothe3-2.jpg'),
('3',	3,	'clothe3-3.jpg'),
('31',	0,	'clothe31-0.jpg'),
('31',	1,	'clothe31-1.jpg'),
('31',	2,	'clothe31-2.jpg'),
('31',	3,	'clothe31-3.jpg'),
('32',	0,	'clothe32-0.jpg'),
('32',	1,	'clothe32-1.jpg'),
('32',	2,	'clothe32-2.jpg'),
('32',	3,	'clothe32-3.jpg'),
('34',	0,	'clothe34-0.jpg'),
('34',	1,	'clothe34-1.jpg'),
('34',	2,	'clothe34-2.jpg'),
('34',	3,	'clothe34-3.jpg'),
('34',	4,	'clothe34-4.jpg'),
('35',	0,	'clothe35-0.jpg'),
('35',	1,	'clothe35-1.jpg'),
('35',	2,	'clothe35-2.jpg'),
('35',	3,	'clothe35-3.jpg'),
('35',	4,	'clothe35-4.jpg'),
('36',	0,	'clothe36-0.jpg'),
('36',	1,	'clothe36-1.jpg'),
('36',	2,	'clothe36-2.jpg'),
('36',	3,	'clothe36-3.jpg'),
('36',	4,	'clothe36-4.jpg'),
('38',	0,	'clothe38-0.jpg'),
('38',	1,	'clothe38-1.jpg'),
('38',	2,	'clothe38-2.jpg'),
('38',	3,	'clothe38-3.jpg'),
('38',	4,	'clothe38-4.jpg'),
('39',	0,	'clothe39-0.jpg'),
('39',	1,	'clothe39-1.jpg'),
('39',	2,	'clothe39-2.jpg'),
('39',	3,	'clothe39-3.jpg'),
('45',	0,	'clothe45-0.jpg'),
('45',	1,	'clothe45-1.jpg'),
('45',	2,	'clothe45-2.jpg'),
('45',	3,	'clothe45-3.jpg'),
('45',	4,	'clothe45-4.jpg'),
('51',	0,	'clothe51-0.jpg'),
('51',	1,	'clothe51-1.jpg'),
('51',	2,	'clothe51-2.jpg'),
('51',	3,	'clothe51-3.jpg'),
('51',	4,	'clothe51-4.jpg'),
('51',	5,	'clothe51-5.jpg'),
('52',	0,	'clothe52-0.jpg'),
('52',	1,	'clothe52-1.jpg'),
('52',	2,	'clothe52-2.jpg'),
('52',	3,	'clothe52-3.jpg'),
('52',	4,	'clothe52-4.jpg'),
('57',	0,	'clothe57-0.jpg'),
('57',	1,	'clothe57-1.jpg'),
('57',	2,	'clothe57-2.jpg'),
('57',	3,	'clothe57-3.jpg'),
('6',	0,	'clothe6-0.jpg'),
('6',	1,	'clothe6-1.jpg'),
('6',	2,	'clothe6-2.jpg'),
('6',	3,	'clothe6-3.jpg'),
('6',	4,	'clothe6-4.jpg'),
('61',	0,	'clothe61-0.jpg'),
('61',	1,	'clothe61-1.jpg'),
('61',	2,	'clothe61-2.jpg'),
('61',	3,	'clothe61-3.jpg'),
('66',	0,	'clothe66-0.jpg'),
('66',	1,	'clothe66-3.jpg'),
('66',	2,	'clothe66-1.jpg'),
('66',	3,	'clothe66-2.jpg'),
('68',	0,	'clothe68-0.jpg'),
('68',	1,	'clothe68-1.jpg'),
('68',	2,	'clothe68-2.jpg'),
('68',	3,	'clothe68-3.jpg'),
('68',	4,	'clothe68-4.jpg'),
('68',	5,	'clothe68-5.jpg'),
('7',	0,	'clothe7-0.jpg'),
('7',	1,	'clothe7-1.jpg'),
('7',	2,	'clothe7-2.jpg'),
('7',	3,	'clothe7-3.jpg'),
('7',	4,	'clothe7-4.jpg'),
('73',	0,	'clothe73-0.jpg'),
('73',	1,	'clothe73-1.jpg'),
('73',	2,	'clothe73-2.jpg'),
('73',	3,	'clothe73-3.jpg'),
('83',	0,	'clothe83-0.jpg'),
('83',	1,	'clothe83-1.jpg'),
('83',	2,	'clothe83-2.jpg'),
('83',	3,	'clothe83-3.jpg'),
('85',	0,	'clothe85-0.jpg'),
('85',	1,	'clothe85-1.jpg'),
('85',	2,	'clothe85-2.jpg'),
('85',	3,	'clothe85-3.jpg'),
('92',	0,	'clothe92-0.jpg'),
('92',	1,	'clothe92-1.jpg'),
('92',	2,	'clothe92-2.jpg'),
('92',	3,	'clothe92-3.jpg'),
('92',	4,	'clothe92-4.jpg'),
('95',	0,	'clothe95-0.jpg'),
('95',	1,	'clothe95-1.jpg'),
('95',	2,	'clothe95-2.jpg'),
('95',	3,	'clothe95-3.jpg'),
('95',	4,	'clothe95-4.jpg'),
('95',	5,	'clothe95-5.jpg'),
('95',	6,	'clothe95-6.jpg');

CREATE TABLE `ProductsPrices` (
  `prodId` varchar(100) NOT NULL,
  `country_` varchar(100) NOT NULL,
  `iso_currency` varchar(10) NOT NULL,
  `price` double NOT NULL,
  PRIMARY KEY (`prodId`,`country_`,`iso_currency`),
  KEY `fk_country_.ProductsPrices-FROM-Countries` (`country_`),
  KEY `fk_iso_currency.ProductsPrices-FROM-CurrenciesIsoCodes` (`iso_currency`),
  CONSTRAINT `fk_country_.ProductsPrices-FROM-Countries` FOREIGN KEY (`country_`) REFERENCES `Countries` (`country`) ON UPDATE CASCADE,
  CONSTRAINT `fk_iso_currency.ProductsPrices-FROM-CurrenciesIsoCodes` FOREIGN KEY (`iso_currency`) REFERENCES `Currencies` (`isoCurrency`) ON UPDATE CASCADE,
  CONSTRAINT `fk_prodId.ProductsPrices-FROM-Products` FOREIGN KEY (`prodId`) REFERENCES `Products` (`prodID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `ProductsShippings` (
  `prodId` varchar(100) NOT NULL,
  `country_` varchar(100) NOT NULL,
  `iso_currency` varchar(10) NOT NULL,
  `price` double NOT NULL,
  `time` int NOT NULL,
  PRIMARY KEY (`prodId`,`iso_currency`,`country_`) USING BTREE,
  KEY `fk_country_.ProductsShipping-FROM-Countries` (`country_`),
  KEY `fk_iso_currency.ProductsShipping-FROM-CurrenciesIsoCodes` (`iso_currency`),
  CONSTRAINT `fk_country_.ProductsShipping-FROM-Countries` FOREIGN KEY (`country_`) REFERENCES `Countries` (`country`) ON UPDATE CASCADE,
  CONSTRAINT `fk_iso_currency.ProductsShipping-FROM-CurrenciesIsoCodes` FOREIGN KEY (`iso_currency`) REFERENCES `Currencies` (`isoCurrency`) ON UPDATE CASCADE,
  CONSTRAINT `fk_prodId.ProductsShipping-FROM-Products` FOREIGN KEY (`prodId`) REFERENCES `Products` (`prodID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `ProductsTypes` (
  `productType` varchar(50) NOT NULL,
  PRIMARY KEY (`productType`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `ProductsTypes` (`productType`) VALUES
('basketproduct'),
('boxproduct');

CREATE TABLE `Sexes` (
  `sexe` varchar(10) NOT NULL,
  PRIMARY KEY (`sexe`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Sexes` (`sexe`) VALUES
('lady'),
('other'),
('sir');

CREATE TABLE `Sizes` (
  `sizeName` varchar(100) NOT NULL,
  PRIMARY KEY (`sizeName`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Sizes` (`sizeName`) VALUES
('32'),
('34'),
('36'),
('38'),
('3xl'),
('40'),
('42'),
('44'),
('46'),
('48'),
('4xl'),
('50'),
('52'),
('54'),
('56'),
('58'),
('60'),
('62'),
('l'),
('m'),
('s'),
('xl'),
('xs'),
('xxl'),
('xxs');

CREATE TABLE `SizesMeasures` (
  `size_name` varchar(100) NOT NULL,
  `body_part` varchar(30) NOT NULL,
  `unit_name` varchar(50) NOT NULL,
  `value` double NOT NULL,
  PRIMARY KEY (`size_name`,`body_part`) USING BTREE,
  KEY `FK_body_part.SizesMeasures-FROM-BodyPart` (`body_part`),
  KEY `FK_unit_name.SizesMeasures-FROM-MeasureUnits` (`unit_name`),
  CONSTRAINT `FK_body_part.SizesMeasures-FROM-BodyPart` FOREIGN KEY (`body_part`) REFERENCES `BodyParts` (`bodyPart`) ON UPDATE CASCADE,
  CONSTRAINT `FK_size_name.SizesMeasures-FROM-Sizes` FOREIGN KEY (`size_name`) REFERENCES `Sizes` (`sizeName`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `FK_unit_name.SizesMeasures-FROM-MeasureUnits` FOREIGN KEY (`unit_name`) REFERENCES `MeasureUnits` (`unitName`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `SizesMeasures` (`size_name`, `body_part`, `unit_name`, `value`) VALUES
('32',	'arm',	'centimeter',	1000),
('32',	'bust',	'centimeter',	84),
('32',	'hip',	'centimeter',	90),
('32',	'inseam',	'centimeter',	1000),
('32',	'waist',	'centimeter',	64),
('34',	'arm',	'centimeter',	1000),
('34',	'bust',	'centimeter',	86),
('34',	'hip',	'centimeter',	94),
('34',	'inseam',	'centimeter',	1000),
('34',	'waist',	'centimeter',	66),
('36',	'arm',	'centimeter',	1000),
('36',	'bust',	'centimeter',	90),
('36',	'hip',	'centimeter',	98),
('36',	'inseam',	'centimeter',	1000),
('36',	'waist',	'centimeter',	70),
('38',	'arm',	'centimeter',	1000),
('38',	'bust',	'centimeter',	94),
('38',	'hip',	'centimeter',	102),
('38',	'inseam',	'centimeter',	1000),
('38',	'waist',	'centimeter',	74),
('3xl',	'arm',	'centimeter',	1000),
('3xl',	'bust',	'centimeter',	152),
('3xl',	'hip',	'centimeter',	152),
('3xl',	'inseam',	'centimeter',	1000),
('3xl',	'waist',	'centimeter',	142),
('40',	'arm',	'centimeter',	1000),
('40',	'bust',	'centimeter',	98),
('40',	'hip',	'centimeter',	106),
('40',	'inseam',	'centimeter',	1000),
('40',	'waist',	'centimeter',	78),
('42',	'arm',	'centimeter',	1000),
('42',	'bust',	'centimeter',	102),
('42',	'hip',	'centimeter',	110),
('42',	'inseam',	'centimeter',	1000),
('42',	'waist',	'centimeter',	82),
('44',	'arm',	'centimeter',	1000),
('44',	'bust',	'centimeter',	106),
('44',	'hip',	'centimeter',	116),
('44',	'inseam',	'centimeter',	1000),
('44',	'waist',	'centimeter',	88),
('46',	'arm',	'centimeter',	1000),
('46',	'bust',	'centimeter',	110),
('46',	'hip',	'centimeter',	117),
('46',	'inseam',	'centimeter',	1000),
('46',	'waist',	'centimeter',	96),
('48',	'arm',	'centimeter',	1000),
('48',	'bust',	'centimeter',	116),
('48',	'hip',	'centimeter',	118),
('48',	'inseam',	'centimeter',	1000),
('48',	'waist',	'centimeter',	102),
('4xl',	'arm',	'centimeter',	1000),
('4xl',	'bust',	'centimeter',	160),
('4xl',	'hip',	'centimeter',	160),
('4xl',	'inseam',	'centimeter',	1000),
('4xl',	'waist',	'centimeter',	150),
('50',	'arm',	'centimeter',	1000),
('50',	'bust',	'centimeter',	122),
('50',	'hip',	'centimeter',	123),
('50',	'inseam',	'centimeter',	1000),
('50',	'waist',	'centimeter',	108),
('52',	'arm',	'centimeter',	1000),
('52',	'bust',	'centimeter',	128),
('52',	'hip',	'centimeter',	128),
('52',	'inseam',	'centimeter',	1000),
('52',	'waist',	'centimeter',	114),
('54',	'arm',	'centimeter',	1000),
('54',	'bust',	'centimeter',	134),
('54',	'hip',	'centimeter',	134),
('54',	'inseam',	'centimeter',	1000),
('54',	'waist',	'centimeter',	121),
('56',	'arm',	'centimeter',	1000),
('56',	'bust',	'centimeter',	140),
('56',	'hip',	'centimeter',	140),
('56',	'inseam',	'centimeter',	1000),
('56',	'waist',	'centimeter',	128),
('58',	'arm',	'centimeter',	1000),
('58',	'bust',	'centimeter',	146),
('58',	'hip',	'centimeter',	146),
('58',	'inseam',	'centimeter',	1000),
('58',	'waist',	'centimeter',	135),
('60',	'arm',	'centimeter',	1000),
('60',	'bust',	'centimeter',	152),
('60',	'hip',	'centimeter',	152),
('60',	'inseam',	'centimeter',	1000),
('60',	'waist',	'centimeter',	142),
('62',	'arm',	'centimeter',	1000),
('62',	'bust',	'centimeter',	160),
('62',	'hip',	'centimeter',	160),
('62',	'inseam',	'centimeter',	1000),
('62',	'waist',	'centimeter',	150),
('l',	'arm',	'centimeter',	1000),
('l',	'bust',	'centimeter',	116),
('l',	'hip',	'centimeter',	118),
('l',	'inseam',	'centimeter',	1000),
('l',	'waist',	'centimeter',	102),
('m',	'arm',	'centimeter',	1000),
('m',	'bust',	'centimeter',	104),
('m',	'hip',	'centimeter',	108),
('m',	'inseam',	'centimeter',	1000),
('m',	'waist',	'centimeter',	90),
('s',	'arm',	'centimeter',	1000),
('s',	'bust',	'centimeter',	96),
('s',	'hip',	'centimeter',	102),
('s',	'inseam',	'centimeter',	1000),
('s',	'waist',	'centimeter',	80),
('xl',	'arm',	'centimeter',	1000),
('xl',	'bust',	'centimeter',	128),
('xl',	'hip',	'centimeter',	128),
('xl',	'inseam',	'centimeter',	1000),
('xl',	'waist',	'centimeter',	114),
('xs',	'arm',	'centimeter',	1000),
('xs',	'bust',	'centimeter',	88),
('xs',	'hip',	'centimeter',	96),
('xs',	'inseam',	'centimeter',	1000),
('xs',	'waist',	'centimeter',	72),
('xxl',	'arm',	'centimeter',	1000),
('xxl',	'bust',	'centimeter',	140),
('xxl',	'hip',	'centimeter',	140),
('xxl',	'inseam',	'centimeter',	1000),
('xxl',	'waist',	'centimeter',	128),
('xxs',	'arm',	'centimeter',	1000),
('xxs',	'bust',	'centimeter',	82),
('xxs',	'hip',	'centimeter',	90),
('xxs',	'inseam',	'centimeter',	1000),
('xxs',	'waist',	'centimeter',	64);

CREATE TABLE `StockLocks` (
  `userId` varchar(50) NOT NULL,
  `prodId` varchar(100) NOT NULL,
  `size_name` varchar(100) NOT NULL,
  `quantity` int NOT NULL,
  `lockTime` int NOT NULL,
  `setDate` datetime NOT NULL,
  PRIMARY KEY (`userId`,`prodId`,`size_name`),
  KEY `fk_prodId.size_name.StockLocks-FROM-Products-Sizes` (`prodId`,`size_name`),
  CONSTRAINT `fk_prodId.size_name.StockLocks-FROM-Products-Sizes` FOREIGN KEY (`prodId`, `size_name`) REFERENCES `Products-Sizes` (`prodId`, `size_name`) ON UPDATE CASCADE,
  CONSTRAINT `fk_userId.StockLocks-FROM-Users` FOREIGN KEY (`userId`) REFERENCES `Users` (`userID`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `StripeCheckoutSessions` (
  `sessionID` varchar(100) NOT NULL,
  `payId` varchar(50) NOT NULL,
  `userId` varchar(50) NOT NULL,
  `iso_currency` varchar(10) NOT NULL,
  `custoID` varchar(100) DEFAULT NULL,
  `payStatus` varchar(50) NOT NULL,
  `setDate` datetime NOT NULL,
  PRIMARY KEY (`sessionID`),
  KEY `fk_pay_method.StripeCheckoutSessions-FROM-Payemsnts` (`payId`),
  KEY `fk_userId.StripeCheckoutSessions-FROM-Users` (`userId`),
  KEY `fk-iso_currency.StripeCheckoutSessions-FROM-Currencies` (`iso_currency`),
  CONSTRAINT `fk-iso_currency.StripeCheckoutSessions-FROM-Currencies` FOREIGN KEY (`iso_currency`) REFERENCES `Currencies` (`isoCurrency`) ON UPDATE CASCADE,
  CONSTRAINT `fk_pay_method.StripeCheckoutSessions-FROM-Payemsnts` FOREIGN KEY (`payId`) REFERENCES `Payements` (`payID`) ON UPDATE CASCADE,
  CONSTRAINT `fk_userId.StripeCheckoutSessions-FROM-Users` FOREIGN KEY (`userId`) REFERENCES `Users` (`userID`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


CREATE TABLE `Translations` (
  `translationID` int NOT NULL AUTO_INCREMENT,
  `en` text NOT NULL,
  `iso_lang` varchar(10) NOT NULL,
  `translation` text NOT NULL,
  PRIMARY KEY (`translationID`,`iso_lang`) USING BTREE,
  KEY `fk_Translation.isolang-FROM-Languages` (`iso_lang`),
  CONSTRAINT `fk_Translation.isolang-FROM-Languages` FOREIGN KEY (`iso_lang`) REFERENCES `Languages` (`langIsoCode`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Translations` (`translationID`, `en`, `iso_lang`, `translation`) VALUES
(1,	'free with meimbox',	'fr',	'gratuit avec meimbox'),
(2,	'size customization for free by our tailor',	'fr',	'personnalisation de la taille gratuitement par notre tailleur'),
(3,	'delivery in less than 5 business days',	'fr',	'livraison en moins de 5 jours ouvrés'),
(4,	'return 100% free',	'fr',	'retour 100% gratuit'),
(5,	'access to the entire item catalog',	'fr',	'accès à l\'ensemble du catalogue d\'articles'),
(6,	'free shipping',	'fr',	'livraison gratuite'),
(7,	'january',	'fr',	'janvier'),
(8,	'february',	'fr',	'février'),
(9,	'march',	'fr',	'mars'),
(10,	'april',	'fr',	'avril'),
(11,	'may',	'fr',	'mai'),
(12,	'june',	'fr',	'juin'),
(13,	'july',	'fr',	'juillet'),
(14,	'august',	'fr',	'août'),
(15,	'september',	'fr',	'septembre'),
(16,	'october',	'fr',	'octobre'),
(17,	'november',	'fr',	'novembre'),
(18,	'december',	'fr',	'décembre'),
(19,	'cargo pants',	'fr',	'pantalon cargo'),
(20,	'jeans',	'fr',	'jeans'),
(21,	'trousers',	'fr',	'pantalon'),
(22,	'shorts',	'fr',	'short'),
(23,	'socks',	'fr',	'chaussettes'),
(24,	'bikini',	'fr',	'bikini'),
(25,	'swimsuit',	'fr',	'maillot de bain'),
(26,	'cardigan',	'fr',	'cardigan'),
(27,	'hawaiian shirt',	'fr',	'chemise hawaïenne'),
(28,	'hoodie',	'fr',	'sweat à capuche'),
(29,	'jumper',	'fr',	'marinière'),
(30,	'long-sleeve top',	'fr',	'haut à manches longues'),
(31,	'tops',	'fr',	'haut'),
(32,	'polo shirt',	'fr',	'chemise polo'),
(33,	'pullover',	'fr',	'pullover'),
(34,	'shirt',	'fr',	'chemise'),
(35,	'sleeveless shirt',	'fr',	'chemise hawaïenne'),
(36,	'sweater',	'fr',	'chandail'),
(37,	't-shirt',	'fr',	't-shirt'),
(38,	'tank top',	'fr',	'débardeur'),
(39,	'bra',	'fr',	'soutien-gorge'),
(40,	'skirt suits',	'fr',	'tailleurs-jupes'),
(41,	'smokings',	'fr',	'smokings'),
(42,	'skirt',	'fr',	'jupe'),
(43,	'suit',	'fr',	'costume'),
(44,	'vest',	'fr',	'gilet'),
(45,	'dress',	'fr',	'robe\r\n'),
(46,	'sheath dress',	'fr',	'robe fourreau'),
(47,	'uniform',	'fr',	'uniforme'),
(48,	'slip',	'fr',	'caleçon'),
(49,	'bathrobe',	'fr',	'peignoir de bain'),
(50,	'stockings',	'fr',	'bas'),
(51,	'singlet',	'fr',	'singlet'),
(52,	'pant suits',	'fr',	'tailleurs-pantalon'),
(53,	'jumpsuits',	'fr',	'combinaison'),
(54,	'skorts',	'fr',	'jupe-culottes'),
(55,	'blazer',	'fr',	'blazer'),
(56,	'coat',	'fr',	'manteau'),
(57,	'jacket',	'fr',	'veste'),
(58,	'long coat',	'fr',	'long manteau'),
(59,	'trench coat',	'fr',	'trench coat'),
(60,	'winter coat',	'fr',	'manteau d\'hiver'),
(61,	'underpants',	'fr',	'slip'),
(62,	'overalls',	'fr',	'salopette'),
(63,	'red',	'fr',	'rouge'),
(64,	'gold',	'fr',	'or'),
(65,	'purple',	'fr',	'violet'),
(66,	'pink',	'fr',	'rose'),
(67,	'blue',	'fr',	'bleu'),
(68,	'green',	'fr',	'vert'),
(69,	'white',	'fr',	'blanc'),
(70,	'black',	'fr',	'noir'),
(71,	'beige',	'fr',	'beige'),
(72,	'grey',	'fr',	'gris'),
(73,	'brown',	'fr',	'marron'),
(74,	'yellow',	'fr',	'jaune'),
(75,	'orange',	'fr',	'orange'),
(76,	'normal',	'fr',	'normal'),
(77,	'wide',	'fr',	'large');

CREATE TABLE `TranslationStations` (
  `station` varchar(100) NOT NULL,
  `iso_lang` varchar(10) NOT NULL,
  `translation` text NOT NULL,
  PRIMARY KEY (`station`,`iso_lang`) USING BTREE,
  KEY `fk_iso_lang.TranslationStations-FROM-Languages` (`iso_lang`),
  CONSTRAINT `fk_iso_lang.TranslationStations-FROM-Languages` FOREIGN KEY (`iso_lang`) REFERENCES `Languages` (`langIsoCode`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `TranslationStations` (`station`, `iso_lang`, `translation`) VALUES
('ER1',	'en',	'Sorry, this service is temporarily unavailable'),
('ER1',	'fr',	'Désolé, ce service est pontuellement indisponible'),
('ER10',	'en',	'Please select a size'),
('ER10',	'fr',	'veuillez choisir une taille'),
('ER11',	'en',	'if you choose the option \'Size\' you must check a size.'),
('ER11',	'fr',	'si vous choisissez l\'option \'Taille\' vous devez cocher une taille.'),
('ER12',	'en',	'if you choose the option \'Custom size\' you must select one of your measurements or create a new one.'),
('ER12',	'fr',	'si vous choisissez l\'option \'Taille personnalisée\' vous devez sélectionner une de vos mesures ou en créer une nouvelle.'),
('ER13',	'en',	'sorry, the stock for this size is sold out at the moment.'),
('ER13',	'fr',	'désolé, le stock pour cette taille est épuisé pour le moment.'),
('ER14',	'en',	'Sorry, this box has reached the maximum number of items: '),
('ER14',	'fr',	'Désolé, cette box a atteint le nombre maximum d\'article: '),
('ER15',	'en',	'sorry, there is not enough free space in this box to move all the copies of your item'),
('ER15',	'fr',	'désolé, il n\'y a pas assez d\'espace libre dans cette box pour déplacer toutes les copies de votre article'),
('ER16',	'en',	'this measurement cannot be deleted because it is used on items in the shopping bag.'),
('ER16',	'fr',	'cette mesure ne peut pas être supprimée car elle est utilisée sur des articles du panier.'),
('ER17',	'en',	'the quantity must be at least 1'),
('ER17',	'fr',	'la quantité doit être de minimum 1'),
('ER18',	'en',	'the quantity indicated exceeds the space available in the box'),
('ER18',	'fr',	'la quantité indiquée dépasse l\'espace disponible dans la box'),
('ER19',	'en',	'this email is invalid'),
('ER19',	'fr',	'cet email est invalide'),
('ER2',	'en',	'this field can not be empty'),
('ER2',	'fr',	'ce champ ne peut pas être vide'),
('ER20',	'en',	'this field can only contain letters (A-Z), dashes (-) and spaces'),
('ER20',	'fr',	'ce champ ne peut contenir que des lettres (A-Z), des tirets (-) et des espaces'),
('ER21',	'en',	'this field must contain at least 8 characters among the following: 0-9, a-z, -, _'),
('ER21',	'fr',	'ce champ doit contenir au moins 8 caractères parmi les suivants: 0-9, a-z, -, _'),
('ER22',	'en',	'you must accept the terms and conditions'),
('ER22',	'fr',	'vous devez accepter les termes et conditions'),
('ER23',	'en',	'this address already exists'),
('ER23',	'fr',	'cette adresse existe déjà'),
('ER24',	'en',	'the password confirmation is not correct'),
('ER24',	'fr',	'la confirmation du mot de passe n\'est pas correct'),
('ER25',	'en',	'this address does not exist'),
('ER25',	'fr',	'cette adresse n\'existe pas'),
('ER26',	'en',	'the password is not correct'),
('ER26',	'fr',	'le mot de passe est incorrect'),
('ER27',	'en',	'this field can only contain spaces as well as the following characters: a-z, 0-9, -, _'),
('ER27',	'fr',	'ce champ ne peut contenir que des espaces ainsi que les caractères suivant: a-z, 0-9, -, _'),
('ER28',	'en',	'this field can only contain spaces as well as the following characters: a-z, -, _'),
('ER28',	'fr',	'ce champ ne peut contenir que des espaces ainsi que les caractères suivant: a-z, -, _'),
('ER29',	'en',	'you have already registered this address'),
('ER29',	'fr',	'vous avez déjà enregistré cette adresse'),
('ER3',	'en',	'this field cannot contain numbers of the form 1997 | 297.829 or 0.321, etc ...'),
('ER3',	'fr',	'ce champ ne peut contenir des nombres de la forme 1997 | 297,829 ou 0,321, etc...'),
('ER30',	'en',	'stock error occurred'),
('ER30',	'fr',	'une erreur de stock s\'est produite'),
('ER31',	'en',	'you cannot proceed to payment because your shopping bag is empty'),
('ER31',	'fr',	'vous ne pouvez pas procéder au paiement car votre panier est vide'),
('ER32',	'en',	'sorry, this item is no longer available in the measurements you gave'),
('ER32',	'fr',	'désolé, cette article n\'est plus disponible dans les mesures que vous avez donné'),
('ER33',	'en',	'you already have this item with this measurement'),
('ER33',	'fr',	'vous avez déjà cet article avec cette mesure'),
('ER34',	'en',	'you already have this item in this size'),
('ER34',	'fr',	'vous avez déjà cet article dans cette taille'),
('ER35',	'en',	'please correct the above errors before continuing.'),
('ER35',	'fr',	'veuillez corriger les erreurs ci-dessus avant de continuer.'),
('ER36',	'en',	'you cannot change this measurement because it is used on an item.'),
('ER36',	'fr',	'vous ne pouvez pas modifier cette mesure car elle est utilisée sur un article.'),
('ER4',	'en',	'this field must start with a letter and can only contain letters, numbers, spaces and the characters `-` and ` _`'),
('ER4',	'fr',	'ce champ doit commencer par une lettre et peut uniquement contenir des lettres, des chiffres, des espaces et les caractères `-` et `_`'),
('ER5',	'en',	'you must tick a choice'),
('ER5',	'fr',	'vous devez cocher un choix'),
('ER6',	'en',	'the maximum number of characters for this field is'),
('ER6',	'fr',	'le nombre de caractère maximum pour ce champ est de'),
('ER7',	'en',	'this field can only contain numbers (0-9)'),
('ER7',	'fr',	'ce champ ne peut contenir que des chiffres (0-9)'),
('ER8',	'en',	'Sorry, You have reached the maximum number of measurements:'),
('ER8',	'fr',	'Désolé, Vous avez atteint le nombre maximum de mesure:'),
('ER9',	'en',	'you must check the option <b>\'Size\'</b> or <b>\'Custom size\'</b>'),
('ER9',	'fr',	'vous devez cocher l\'option <b>\'Taille\'</b> ou <b>\'Taille personnalisée\'</b>'),
('US1',	'en',	'filters'),
('US1',	'fr',	'filtres'),
('US10',	'en',	'color'),
('US10',	'fr',	'couleur'),
('US100',	'en',	'postal code'),
('US100',	'fr',	'code postal'),
('US101',	'en',	'phone(optional)'),
('US101',	'fr',	'téléphone(facultatif)'),
('US102',	'en',	'checkout'),
('US102',	'fr',	'commander'),
('US103',	'en',	'are you sure you want to log out?'),
('US103',	'fr',	'voulez-vous vraiment vous déconnecter?'),
('US104',	'en',	'your items will be reserved for the next {time} minutes'),
('US104',	'fr',	'vos articles seront réservés pour les {time} prochaines minutes'),
('US105',	'en',	'home'),
('US105',	'fr',	'accueil'),
('US106',	'en',	'sorry, an error occurred'),
('US106',	'fr',	'désolé, une erreur s\'est produite'),
('US107',	'en',	'{brand} has been informed of the error and it will be fixed as\r\nas soon as possible.'),
('US107',	'fr',	'{brand} a été informé de l\'erreur et elle sera corrigée au plus vite.'),
('US108',	'en',	'thank you, we have received your order'),
('US108',	'fr',	'merci, nous avons bien reçu votre commande'),
('US109',	'en',	'please check your email for order confirmation and delivery details.'),
('US109',	'fr',	'veuillez consulter votre messagerie pour obtenir la confirmation de commande et les détails de livraison.'),
('US11',	'en',	'price'),
('US11',	'fr',	'prix'),
('US110',	'en',	'click on the link below to track your order.'),
('US110',	'fr',	'cliquez sur le lien ci-dessous pour suivre votre commande.'),
('US111',	'en',	'track your order'),
('US111',	'fr',	'suivez votre commande'),
('US112',	'en',	'our teams are actively working to offer you the best tracking experience for your orders in the coming days.'),
('US112',	'fr',	'nos équipes travaillent activement pour vous offrir la meilleure expérience de suivi pour vos commandes dans les prochains jours.'),
('US113',	'en',	'coming soon'),
('US113',	'fr',	'bientôt disponible'),
('US114',	'en',	'meanwhile we will keep you informed of every change in status of your order on your email.'),
('US114',	'fr',	'en attendant, nous vous tiendrons informés de chaque changement de statut de votre commande sur votre messagerie.'),
('US115',	'en',	'shipping discount'),
('US115',	'fr',	'remise expédition'),
('US116',	'en',	'discount'),
('US116',	'fr',	'remise'),
('US117',	'en',	'free shipping for orders over {price} (excluding shipping costs)'),
('US117',	'fr',	'expédition gratuite pour les commandes de plus de {price} (hors frais d\'expédition)'),
('US118',	'en',	'total items'),
('US118',	'fr',	'total articles'),
('US119',	'en',	'add box'),
('US119',	'fr',	'boxes'),
('US12',	'en',	'minimum price'),
('US12',	'fr',	'prix minimum'),
('US120',	'en',	'new drop'),
('US120',	'fr',	'nouveautées'),
('US121',	'en',	'sign up'),
('US121',	'fr',	's\'inscrire'),
('US122',	'en',	'by subscribing to {brand}\'s newsletter, I understand and accept to receive emails from{brand}’s with the latest deals, sales, and updates by multiple form of communication like email, phone and/or post.'),
('US122',	'fr',	'en m\'inscrivant à la newsletter de {brand}, je comprends et j\'accepte de recevoir des e-mails de {brand}\'s avec les dernières offres, ventes et mises à jour par plusieurs formes de communication comme e-mail, téléphone et/ou courrier.'),
('US123',	'en',	'new member'),
('US123',	'fr',	's\'inscrire'),
('US124',	'en',	'sign in'),
('US124',	'fr',	'se connecter'),
('US125',	'en',	'lady'),
('US125',	'fr',	'dame'),
('US126',	'en',	'sir'),
('US126',	'fr',	'monsieur'),
('US127',	'en',	'other'),
('US127',	'fr',	'autre'),
('US128',	'en',	'first name'),
('US128',	'fr',	'prénom'),
('US129',	'en',	'last name'),
('US129',	'fr',	'nom'),
('US13',	'en',	'maximum price'),
('US13',	'fr',	'prix maximum'),
('US130',	'en',	'email'),
('US130',	'fr',	'email'),
('US131',	'en',	'password'),
('US131',	'fr',	'mot de passe'),
('US132',	'en',	'password confirmation'),
('US132',	'fr',	'confirmation mot de passe'),
('US133',	'en',	'i confirm that I have read and I agree to {brand}\'s terms and conditions including its privacy notice.'),
('US133',	'fr',	'je confirme avoir lu et accepté les termes et conditions de {brand}, y compris sa politique de confidentialité.'),
('US134',	'en',	'keep up with the latest arrivals'),
('US134',	'fr',	'restez informé des dernières arrivées'),
('US135',	'en',	'remember me'),
('US135',	'fr',	'se souvenir de moi'),
('US136',	'en',	'forgot password'),
('US136',	'fr',	'mot de passe oublié'),
('US137',	'en',	'order summary'),
('US137',	'fr',	'résumé de la commande'),
('US138',	'en',	'track your {br}order orders online'),
('US138',	'fr',	'suivez votre {br}commande en ligne'),
('US139',	'en',	'log out'),
('US139',	'fr',	'se déconnecter'),
('US14',	'en',	'apply'),
('US14',	'fr',	'filtrer'),
('US140',	'en',	'menu'),
('US140',	'fr',	'menu'),
('US141',	'en',	'add new box'),
('US141',	'fr',	'ajouter une nouvelle boxe'),
('US142',	'en',	'free shipping'),
('US142',	'fr',	'expédition gratuite'),
('US143',	'en',	'delivery in less than {time} business days'),
('US143',	'fr',	'livraison en moins de {time} jours ouvrés'),
('US144',	'en',	'return 100% free'),
('US144',	'fr',	'retour 100% gratuit'),
('US145',	'en',	'size customization for free by our tailor'),
('US145',	'fr',	'personnalisation de la taille gratuitement par notre tailleur'),
('US146',	'en',	'access to the entire item catalog'),
('US146',	'fr',	'accès à l\'ensemble du catalogue d\'articles'),
('US147',	'en',	'deliveries are usually made within {mintime} to {maxtime} working days'),
('US147',	'fr',	'les livraisons s\'effectuent habituellement sous {mintime} à {maxtime} jours ouvrés'),
('US148',	'en',	'returns are always free up to {maxreturntime} days after receipt of your order'),
('US148',	'fr',	'les retours sont toujours gratuits jusqu\'à {maxreturntime} jours après réception de votre commande.'),
('US149',	'en',	'in the event of a return, you are refunded* the full amount of the order (excluding shipping costs).'),
('US149',	'fr',	'en cas de retour, vous serez remboursé* du montant total de la commande (hors frais de port).'),
('US15',	'en',	'close filters'),
('US15',	'fr',	'fermer les filtres'),
('US150',	'en',	'please note that each refund is for the entire box ordered'),
('US150',	'fr',	's\'il vous plaît, notez que chaque remboursement porte sur l\'intégralité de la box commandée.'),
('US151',	'en',	'skip'),
('US151',	'fr',	'passer'),
('US152',	'en',	'next'),
('US152',	'fr',	'suivant'),
('US153',	'en',	'check \'{size_type_alphanum}\' to choose a size among our predefined sizes.'),
('US153',	'fr',	'cochez \'{size_type_alphanum}\' pour choisir une taille parmi nos tailles prédéfinies.'),
('US154',	'en',	'if you want a custom size, check \'{size_type_measure}\' and let us know your measurements.{lign_return}Our tailors will take care of putting your item in your size.'),
('US154',	'fr',	'si vous voulez une taille personnalisée, cochez \'{size_type_measure}\' et communiquez nous vos mesures.{lign_return}Nos tailleurs se chargeront de mettre votre article à votre taille.'),
('US155',	'en',	'add a reference brand if you want the same dimensions as a specific mark for the size you have checked.{lign_return}Thus, our tailors will take care of putting your item to the corresponding size..'),
('US155',	'fr',	'ajoutez une marque de référence si vous voulez les mêmes dimensions qu\'une marque précise pour la taille que vous avez coché.{lign_return}Ainsi, nos tailleurs se chargeront de mettre votre article à la taille correspondante.'),
('US156',	'en',	'here you can indicate your measurements and our tailors will take care of putting your item in the dimensions you have registered.'),
('US156',	'fr',	'ici vous pouvez indiquer vos mesures et nos tailleurs se chargerons de mettre votre article dans les dimensions que vous avez enregistré.'),
('US157',	'en',	'you can also indicate a different cut to improve your comfort.'),
('US157',	'fr',	'vous pouvez aussi indiquer une coupe différente pour améliorer votre confort.'),
('US158',	'en',	'add to a box'),
('US158',	'fr',	'ajouter à une box'),
('US159',	'en',	'box manager'),
('US159',	'fr',	'gestionnaire de box'),
('US16',	'en',	'measure name'),
('US16',	'fr',	'nom de la mesure'),
('US160',	'en',	'add a new box'),
('US160',	'fr',	'ajouter une nouvelle box'),
('US17',	'en',	'custom size'),
('US17',	'fr',	'taille personnalisée'),
('US18',	'en',	'choose a reference brand'),
('US18',	'fr',	'choisir une marque de référence'),
('US19',	'en',	'give us your measurements for a custom size.'),
('US19',	'fr',	'indiquez nous vos mesures pour une retouche personnalisée.'),
('US2',	'en',	'sort by'),
('US2',	'fr',	'trier'),
('US20',	'en',	'choose'),
('US20',	'fr',	'choisir'),
('US21',	'en',	'give your measurements'),
('US21',	'fr',	'indiquez vos mesures'),
('US22',	'en',	'choose a measure'),
('US22',	'fr',	'choisir une mesure'),
('US23',	'en',	'choose cut'),
('US23',	'fr',	'choisir une coupe'),
('US24',	'en',	'add'),
('US24',	'fr',	'ajouter'),
('US25',	'en',	'shopping bag'),
('US25',	'fr',	'panier'),
('US26',	'en',	'3D secure & <br>AES-256 encrypted payement'),
('US26',	'fr',	'paiement crypté avec AES-256 et sécurisé avec 3D secure'),
('US27',	'en',	'customer service 24h/7 response in 1h'),
('US27',	'fr',	'service client 24h / 7 en 1h'),
('US28',	'en',	'free & <br>easy return'),
('US28',	'fr',	'retour facile et gratuit'),
('US29',	'en',	'details'),
('US29',	'fr',	'descriptions'),
('US3',	'en',	'newest'),
('US3',	'fr',	'les plus récents'),
('US30',	'en',	'shipping + return'),
('US30',	'fr',	'livraison + retour'),
('US31',	'en',	'close'),
('US31',	'fr',	'fermer'),
('US32',	'en',	'suggestions'),
('US32',	'fr',	'suggestions'),
('US33',	'en',	'reference brand'),
('US33',	'fr',	'marques de référence'),
('US34',	'en',	'select'),
('US34',	'fr',	'sélectionner'),
('US35',	'en',	'choose a reference brand for the size:'),
('US35',	'fr',	'choisissez une marque de référence pour la taille:'),
('US36',	'en',	'my measurements'),
('US36',	'fr',	'mes mesures'),
('US37',	'en',	'save'),
('US37',	'fr',	'enregistrer'),
('US38',	'en',	'enter your measurements:'),
('US38',	'fr',	'entrez vos mesures:'),
('US39',	'en',	'bust'),
('US39',	'fr',	'buste'),
('US4',	'en',	'older'),
('US4',	'fr',	'les moins récents'),
('US40',	'en',	'arm'),
('US40',	'fr',	'bras'),
('US41',	'en',	'waist'),
('US41',	'fr',	'taille'),
('US42',	'en',	'hip'),
('US42',	'fr',	'hanche'),
('US43',	'en',	'inseam'),
('US43',	'fr',	'entrejambe'),
('US44',	'en',	'add measurement'),
('US44',	'fr',	'ajouter une mesure'),
('US45',	'en',	'your measurements'),
('US45',	'fr',	'vos mesures'),
('US46',	'en',	'customization'),
('US46',	'fr',	'personnalisation'),
('US47',	'en',	'reference'),
('US47',	'fr',	'référence'),
('US48',	'en',	'measure'),
('US48',	'fr',	'mesure'),
('US49',	'en',	'add a new shipping address'),
('US49',	'fr',	'ajouter une nouvelle adresse de livraison'),
('US5',	'en',	'price - hight to low'),
('US5',	'fr',	'prix - décroissant'),
('US50',	'en',	'Are you sure you want to delete this measurement?'),
('US50',	'fr',	'Voulez-vous vraiment supprimer cette mesure?'),
('US51',	'en',	'no result'),
('US51',	'fr',	'aucun resultat'),
('US52',	'en',	'cut'),
('US52',	'fr',	'coupe'),
('US53',	'en',	'items'),
('US53',	'fr',	'articles'),
('US54',	'en',	'quantity'),
('US54',	'fr',	'quantité'),
('US55',	'en',	'box'),
('US55',	'fr',	'box'),
('US56',	'en',	'add'),
('US56',	'fr',	'ajouter'),
('US57',	'en',	'total'),
('US57',	'fr',	'total'),
('US58',	'en',	'Are you sure you want to delete this box?'),
('US58',	'fr',	'Voulez-vous vraiment supprimer cette box?'),
('US59',	'en',	'select a box where to place your item:'),
('US59',	'fr',	'sélectionnez une box où placer votre article:'),
('US6',	'en',	'price - low to hight'),
('US6',	'fr',	'prix - croissant'),
('US60',	'en',	'select a box to move your item to:'),
('US60',	'fr',	'sélectionnez une box où déplacer votre article:'),
('US61',	'en',	'choose the box that suits you:'),
('US61',	'fr',	'choisissez la box qui vous convient:'),
('US62',	'en',	'change size'),
('US62',	'fr',	'modifier la taille'),
('US63',	'en',	'change box'),
('US63',	'fr',	'changer de box'),
('US64',	'en',	'are you sure you want to delete this item?'),
('US64',	'fr',	'voulez-vous vraiment supprimer cet article?'),
('US65',	'en',	'country'),
('US65',	'fr',	'pays'),
('US66',	'en',	'shipping cost'),
('US66',	'fr',	'frais expédition'),
('US67',	'en',	'delivery costs are free'),
('US67',	'fr',	'les frais de livraison sont offerts'),
('US68',	'en',	'processing'),
('US68',	'fr',	'en traitement'),
('US69',	'en',	'empty boxes have been automatically deleted'),
('US69',	'fr',	'les boxes vides ont été automatiquement supprimées'),
('US7',	'en',	'type'),
('US7',	'fr',	'type'),
('US70',	'en',	'hi'),
('US70',	'fr',	'bonjour'),
('US71',	'en',	'your order is in preparation'),
('US71',	'fr',	'votre commande est en préparation '),
('US72',	'en',	'thank you for your confidence'),
('US72',	'fr',	'merci de votre confiance'),
('US73',	'en',	'your order is currently in preparation'),
('US73',	'fr',	'votre commande est actuellement en préparation'),
('US74',	'en',	'you will receive a new message as soon as we have shipped your order'),
('US74',	'fr',	'vous recevrez un nouveau message aussi tôt que nous aurons  expédié votre commande'),
('US75',	'en',	'you can follow the progress of your order at any time'),
('US75',	'fr',	'vous pouvez à tout moment suivre l\'évolution de votre commande'),
('US76',	'en',	'here'),
('US76',	'fr',	'ici'),
('US77',	'en',	'delivery'),
('US77',	'fr',	'livraison'),
('US78',	'en',	'item number'),
('US78',	'fr',	'nombre d\'article'),
('US79',	'en',	'shipping'),
('US79',	'fr',	'expédition'),
('US8',	'en',	'category'),
('US8',	'fr',	'catégorie'),
('US80',	'en',	'vat'),
('US80',	'fr',	'tva'),
('US81',	'en',	'subtotal'),
('US81',	'fr',	'sous-total'),
('US82',	'en',	'total'),
('US82',	'fr',	'total'),
('US83',	'en',	'see my order'),
('US83',	'fr',	'voir ma commande'),
('US84',	'en',	'thanks'),
('US84',	'fr',	'merci'),
('US85',	'en',	'{brand}\'s team'),
('US85',	'fr',	'l\'équipe {brand}'),
('US86',	'en',	'contact us'),
('US86',	'fr',	'nous contacter'),
('US87',	'en',	'changed your mind?'),
('US87',	'fr',	'tu as changé d\'avis?'),
('US88',	'en',	'unsubscribe'),
('US88',	'fr',	'se désabonner'),
('US89',	'en',	'social media'),
('US89',	'fr',	'nos réseaux'),
('US9',	'en',	'size'),
('US9',	'fr',	'taille'),
('US90',	'en',	'stay up-to-date with current activities and future events or share with us your experience by following us on your favorite social media.'),
('US90',	'fr',	'reste informé sur nos dernières actions et nos événements ou partage juste ton expérience avec nous en nous suivant sur ton réseaux favoris.'),
('US91',	'en',	'your order confirmation'),
('US91',	'fr',	'confirmation de votre commande'),
('US92',	'en',	'customer service'),
('US92',	'fr',	'service client'),
('US93',	'en',	'shipping address'),
('US93',	'fr',	'adresse de livraison'),
('US94',	'en',	'new address'),
('US94',	'fr',	'nouvelle adresse'),
('US95',	'en',	'select a shipping address'),
('US95',	'fr',	'sélectionnez une adresse de livraison'),
('US96',	'en',	'address'),
('US96',	'fr',	'adresse'),
('US97',	'en',	'apartment, suite,.(optional)'),
('US97',	'fr',	'appartement, suite,.(facultatif)'),
('US98',	'en',	'state, province, region, etc...'),
('US98',	'fr',	'province, région, état, etc...'),
('US99',	'en',	'city'),
('US99',	'fr',	'ville');

CREATE TABLE `Tutorials` (
  `tutoID` varchar(50) NOT NULL,
  `stepID` int NOT NULL,
  `event_code` varchar(50) NOT NULL,
  `stepName` varchar(50) NOT NULL,
  `direction` varchar(50) NOT NULL,
  `content` varchar(50) NOT NULL,
  `cookieId` varchar(50) NOT NULL,
  PRIMARY KEY (`tutoID`,`stepID`),
  KEY `cookieId` (`cookieId`),
  CONSTRAINT `tutorials_ibfk_1` FOREIGN KEY (`cookieId`) REFERENCES `Cookies` (`cookieID`) ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Tutorials` (`tutoID`, `stepID`, `event_code`, `stepName`, `direction`, `content`, `cookieId`) VALUES
('tut_0',	0,	'evt_cd_127',	'alphanum size type',	'DIRECTION_TOP',	'US153',	'TT_SZTP'),
('tut_0',	1,	'evt_cd_127',	'measurement size type',	'DIRECTION_TOP',	'US154',	'TT_SZTP'),
('tut_1',	0,	'evt_cd_128',	'brand reference',	'DIRECTION_TOP',	'US155',	'TT_RFBRND'),
('tut_2',	0,	'evt_cd_129',	'measurement and cut',	'DIRECTION_TOP',	'US156',	'TT_MSRMNT_CT'),
('tut_2',	1,	'evt_cd_129',	'measurement and cut',	'DIRECTION_TOP',	'US157',	'TT_MSRMNT_CT');

CREATE TABLE `Users` (
  `userID` varchar(50) NOT NULL,
  `lang_` varchar(10) DEFAULT NULL,
  `country_` varchar(100) NOT NULL,
  `iso_currency` varchar(10) NOT NULL,
  `mail` varchar(100) DEFAULT NULL,
  `password` varchar(512) DEFAULT NULL,
  `firstname` varchar(50) DEFAULT NULL,
  `lastname` varchar(50) DEFAULT NULL,
  `birthday` date DEFAULT NULL,
  `newsletter` tinyint(1) DEFAULT NULL,
  `sexe_` varchar(10) DEFAULT NULL,
  `setDate` datetime NOT NULL,
  PRIMARY KEY (`userID`),
  UNIQUE KEY `mail` (`mail`),
  KEY `fk_lang_FROM-Languages` (`lang_`),
  KEY `fk_sexe_FROM-Sexes` (`sexe_`),
  KEY `fk_country_-FROM-Country` (`country_`),
  KEY `fk_iso_currency-FROM-Currency` (`iso_currency`),
  CONSTRAINT `fk_country_-FROM-Country` FOREIGN KEY (`country_`) REFERENCES `Countries` (`country`) ON UPDATE CASCADE,
  CONSTRAINT `fk_iso_currency-FROM-Currency` FOREIGN KEY (`iso_currency`) REFERENCES `Currencies` (`isoCurrency`) ON UPDATE CASCADE,
  CONSTRAINT `fk_lang_FROM-Languages` FOREIGN KEY (`lang_`) REFERENCES `Languages` (`langIsoCode`) ON UPDATE CASCADE,
  CONSTRAINT `fk_sexe_FROM-Sexes` FOREIGN KEY (`sexe_`) REFERENCES `Sexes` (`sexe`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Users` (`userID`, `lang_`, `country_`, `iso_currency`, `mail`, `password`, `firstname`, `lastname`, `birthday`, `newsletter`, `sexe_`, `setDate`) VALUES
('1',	NULL,	'belgium',	'eur',	'system@mail.domain',	'no password',	'system',	'system',	'2019-09-01',	NULL,	'other',	'2020-10-09 18:42:45');

CREATE TABLE `Users-Cookies` (
  `userId` varchar(50) NOT NULL,
  `cookieId` varchar(50) NOT NULL,
  `cookieValue` varchar(200) NOT NULL,
  `domain` varchar(50) NOT NULL,
  `path` varchar(50) NOT NULL,
  `setDate` datetime NOT NULL,
  `settedPeriod` int NOT NULL,
  PRIMARY KEY (`userId`,`cookieId`),
  UNIQUE KEY `cookieId` (`cookieId`,`cookieValue`),
  CONSTRAINT `FK_cookieId.Users-Cookies-FROM-Cookies` FOREIGN KEY (`cookieId`) REFERENCES `Cookies` (`cookieID`) ON UPDATE CASCADE,
  CONSTRAINT `FK_userId.Users-Cookies-FROM-Users` FOREIGN KEY (`userId`) REFERENCES `Users` (`userID`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Users-Cookies` (`userId`, `cookieId`, `cookieValue`, `domain`, `path`, `setDate`, `settedPeriod`) VALUES
('1',	'ADM',	'1',	'c99ae2db6bf6.eu.ngrok.io',	'/versions/v0.2/mmbx/',	'2020-12-15 21:07:50',	10800),
('1',	'CLT',	'1',	'c99ae2db6bf6.eu.ngrok.io',	'/versions/v0.2/mmbx/',	'2020-12-15 21:07:47',	31536000),
('1',	'VIS',	'1',	'c99ae2db6bf6.eu.ngrok.io',	'/versions/v0.2/mmbx/',	'2020-12-15 21:07:47',	94608000);

CREATE TABLE `Users-Privileges` (
  `userId` varchar(50) NOT NULL,
  `privId` varchar(50) NOT NULL,
  `beginDate` datetime DEFAULT NULL,
  `endDate` datetime DEFAULT NULL,
  PRIMARY KEY (`userId`,`privId`),
  KEY `fk_privId.Users-Privileges-FROM-Users` (`privId`),
  KEY `userId` (`userId`),
  CONSTRAINT `fk_privId.Users-Privileges-FROM-Users` FOREIGN KEY (`privId`) REFERENCES `Privileges` (`privID`) ON UPDATE CASCADE,
  CONSTRAINT `fk_userId.Users-Privileges-FROM-Users` FOREIGN KEY (`userId`) REFERENCES `Users` (`userID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

INSERT INTO `Users-Privileges` (`userId`, `privId`, `beginDate`, `endDate`) VALUES
('1',	'system',	NULL,	NULL);

CREATE TABLE `UsersMeasures` (
  `userId` varchar(50) NOT NULL,
  `measureID` varchar(100) NOT NULL,
  `measureName` varchar(25) NOT NULL,
  `userBust` double NOT NULL,
  `userArm` double NOT NULL,
  `userWaist` double NOT NULL,
  `userHip` double NOT NULL,
  `userInseam` double NOT NULL,
  `unit_name` varchar(50) NOT NULL,
  `setDate` datetime DEFAULT NULL,
  PRIMARY KEY (`measureID`) USING BTREE,
  KEY `FK_userId.UsersMeasures-FROM-Users` (`userId`),
  KEY `FK_unit_name.UsersMeasures-FROM-MeasureUnits` (`unit_name`),
  CONSTRAINT `FK_unit_name.UsersMeasures-FROM-MeasureUnits` FOREIGN KEY (`unit_name`) REFERENCES `MeasureUnits` (`unitName`) ON UPDATE CASCADE,
  CONSTRAINT `FK_userId.UsersMeasures-FROM-Users` FOREIGN KEY (`userId`) REFERENCES `Users` (`userID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


-- 2023-10-16 13:52:36
